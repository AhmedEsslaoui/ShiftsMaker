{"version":3,"file":"static/chunks/app/page-c869d5ef4405d007.js","mappings":"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","sources":["webpack://_N_E/?7cda","webpack://_N_E/./lib/utils.ts","webpack://_N_E/./components/ui/button.tsx","webpack://_N_E/./components/ui/card.tsx","webpack://_N_E/./components/ui/tabs.tsx","webpack://_N_E/./components/ui/input.tsx","webpack://_N_E/./components/ui/label.tsx","webpack://_N_E/./components/ui/select.tsx","webpack://_N_E/./components/ui/switch.tsx","webpack://_N_E/./components/ui/table.tsx","webpack://_N_E/./components/ui/dialog.tsx","webpack://_N_E/./components/ui/badge.tsx","webpack://_N_E/./lib/firebase.ts","webpack://_N_E/./components/ClientAnalyticsFilters.tsx","webpack://_N_E/./components/useClientActiveCountries.tsx","webpack://_N_E/./components/ModernScheduleMaker.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/ahmedesslaouibribri/Downloads/ShiftsMaker-main/components/ModernScheduleMaker.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/ahmedesslaouibribri/Downloads/ShiftsMaker-main/node_modules/next/dist/client/image-component.js\");\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\nconst buttonVariants = cva(\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\", {\n  variants: {\n    variant: {\n      default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n      destructive: \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n      outline: \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n      secondary: \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n      ghost: \"hover:bg-accent hover:text-accent-foreground\",\n      link: \"text-primary underline-offset-4 hover:underline\"\n    },\n    size: {\n      default: \"h-9 px-4 py-2\",\n      sm: \"h-8 rounded-md px-3 text-xs\",\n      lg: \"h-10 rounded-md px-8\",\n      icon: \"h-9 w-9\"\n    }\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"default\"\n  }\n});\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>, VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n  return <Comp className={cn(buttonVariants({\n    variant,\n    size,\n    className\n  }))} ref={ref} {...props} />;\n});\nButton.displayName = \"Button\";\nexport { Button, buttonVariants };","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  className,\n  ...props\n}, ref) => <div ref={ref} className={cn(\"rounded-xl border bg-card text-card-foreground shadow\", className)} {...props} />);\nCard.displayName = \"Card\";\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  className,\n  ...props\n}, ref) => <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />);\nCardHeader.displayName = \"CardHeader\";\nconst CardTitle = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  className,\n  ...props\n}, ref) => <div ref={ref} className={cn(\"font-semibold leading-none tracking-tight\", className)} {...props} />);\nCardTitle.displayName = \"CardTitle\";\nconst CardDescription = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  className,\n  ...props\n}, ref) => <div ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />);\nCardDescription.displayName = \"CardDescription\";\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  className,\n  ...props\n}, ref) => <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />);\nCardContent.displayName = \"CardContent\";\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  className,\n  ...props\n}, ref) => <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />);\nCardFooter.displayName = \"CardFooter\";\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };","\"use client\";\n\nimport * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport { cn } from \"@/lib/utils\";\nconst Tabs = TabsPrimitive.Root;\nconst TabsList = React.forwardRef<React.ElementRef<typeof TabsPrimitive.List>, React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>>(({\n  className,\n  ...props\n}, ref) => <TabsPrimitive.List ref={ref} className={cn(\"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\", className)} {...props} />);\nTabsList.displayName = TabsPrimitive.List.displayName;\nconst TabsTrigger = React.forwardRef<React.ElementRef<typeof TabsPrimitive.Trigger>, React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>>(({\n  className,\n  ...props\n}, ref) => <TabsPrimitive.Trigger ref={ref} className={cn(\"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\", className)} {...props} />);\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\nconst TabsContent = React.forwardRef<React.ElementRef<typeof TabsPrimitive.Content>, React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>>(({\n  className,\n  ...props\n}, ref) => <TabsPrimitive.Content ref={ref} className={cn(\"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\", className)} {...props} />);\nTabsContent.displayName = TabsPrimitive.Content.displayName;\nexport { Tabs, TabsList, TabsTrigger, TabsContent };","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(({\n  className,\n  type,\n  ...props\n}, ref) => {\n  return <input type={type} className={cn(\"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\", className)} ref={ref} {...props} />;\n});\nInput.displayName = \"Input\";\nexport { Input };","\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\nconst labelVariants = cva(\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\");\nconst Label = React.forwardRef<React.ElementRef<typeof LabelPrimitive.Root>, React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>>(({\n  className,\n  ...props\n}, ref) => <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />);\nLabel.displayName = LabelPrimitive.Root.displayName;\nexport { Label };","\"use client\";\n\nimport * as React from \"react\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nconst Select = SelectPrimitive.Root;\nconst SelectGroup = SelectPrimitive.Group;\nconst SelectValue = SelectPrimitive.Value;\nconst SelectTrigger = React.forwardRef<React.ElementRef<typeof SelectPrimitive.Trigger>, React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>>(({\n  className,\n  children,\n  ...props\n}, ref) => <SelectPrimitive.Trigger ref={ref} className={cn(\"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\", className)} {...props}>\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>);\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\nconst SelectScrollUpButton = React.forwardRef<React.ElementRef<typeof SelectPrimitive.ScrollUpButton>, React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>>(({\n  className,\n  ...props\n}, ref) => <SelectPrimitive.ScrollUpButton ref={ref} className={cn(\"flex cursor-default items-center justify-center py-1\", className)} {...props}>\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>);\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\nconst SelectScrollDownButton = React.forwardRef<React.ElementRef<typeof SelectPrimitive.ScrollDownButton>, React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>>(({\n  className,\n  ...props\n}, ref) => <SelectPrimitive.ScrollDownButton ref={ref} className={cn(\"flex cursor-default items-center justify-center py-1\", className)} {...props}>\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>);\nSelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName;\nconst SelectContent = React.forwardRef<React.ElementRef<typeof SelectPrimitive.Content>, React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>>(({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}, ref) => <SelectPrimitive.Portal>\n    <SelectPrimitive.Content ref={ref} className={cn(\"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\", position === \"popper\" && \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\", className)} position={position} {...props}>\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport className={cn(\"p-1\", position === \"popper\" && \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\")}>\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>);\nSelectContent.displayName = SelectPrimitive.Content.displayName;\nconst SelectLabel = React.forwardRef<React.ElementRef<typeof SelectPrimitive.Label>, React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>>(({\n  className,\n  ...props\n}, ref) => <SelectPrimitive.Label ref={ref} className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)} {...props} />);\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\nconst SelectItem = React.forwardRef<React.ElementRef<typeof SelectPrimitive.Item>, React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>>(({\n  className,\n  children,\n  ...props\n}, ref) => <SelectPrimitive.Item ref={ref} className={cn(\"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\", className)} {...props}>\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>);\nSelectItem.displayName = SelectPrimitive.Item.displayName;\nconst SelectSeparator = React.forwardRef<React.ElementRef<typeof SelectPrimitive.Separator>, React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>>(({\n  className,\n  ...props\n}, ref) => <SelectPrimitive.Separator ref={ref} className={cn(\"-mx-1 my-1 h-px bg-muted\", className)} {...props} />);\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\nexport { Select, SelectGroup, SelectValue, SelectTrigger, SelectContent, SelectLabel, SelectItem, SelectSeparator, SelectScrollUpButton, SelectScrollDownButton };","\"use client\";\n\nimport * as React from \"react\";\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\nimport { cn } from \"@/lib/utils\";\nconst Switch = React.forwardRef<React.ElementRef<typeof SwitchPrimitives.Root>, React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>>(({\n  className,\n  ...props\n}, ref) => <SwitchPrimitives.Root className={cn(\"peer inline-flex h-[24px] w-[44px] shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\", className)} {...props} ref={ref}>\n    <SwitchPrimitives.Thumb className={cn(\"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\")} />\n  </SwitchPrimitives.Root>);\nSwitch.displayName = SwitchPrimitives.Root.displayName;\nexport { Switch };","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nconst Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(({\n  className,\n  ...props\n}, ref) => <div className=\"relative w-full overflow-auto\">\n    <table ref={ref} className={cn(\"w-full caption-bottom text-sm\", className)} {...props} />\n  </div>);\nTable.displayName = \"Table\";\nconst TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(({\n  className,\n  ...props\n}, ref) => <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />);\nTableHeader.displayName = \"TableHeader\";\nconst TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(({\n  className,\n  ...props\n}, ref) => <tbody ref={ref} className={cn(\"[&_tr:last-child]:border-0\", className)} {...props} />);\nTableBody.displayName = \"TableBody\";\nconst TableFooter = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(({\n  className,\n  ...props\n}, ref) => <tfoot ref={ref} className={cn(\"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\", className)} {...props} />);\nTableFooter.displayName = \"TableFooter\";\nconst TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(({\n  className,\n  ...props\n}, ref) => <tr ref={ref} className={cn(\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\", className)} {...props} />);\nTableRow.displayName = \"TableRow\";\nconst TableHead = React.forwardRef<HTMLTableCellElement, React.ThHTMLAttributes<HTMLTableCellElement>>(({\n  className,\n  ...props\n}, ref) => <th ref={ref} className={cn(\"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\", className)} {...props} />);\nTableHead.displayName = \"TableHead\";\nconst TableCell = React.forwardRef<HTMLTableCellElement, React.TdHTMLAttributes<HTMLTableCellElement>>(({\n  className,\n  ...props\n}, ref) => <td ref={ref} className={cn(\"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\", className)} {...props} />);\nTableCell.displayName = \"TableCell\";\nconst TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(({\n  className,\n  ...props\n}, ref) => <caption ref={ref} className={cn(\"mt-4 text-sm text-muted-foreground\", className)} {...props} />);\nTableCaption.displayName = \"TableCaption\";\nexport { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption };","\"use client\";\n\nimport * as React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { X } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nconst Dialog = DialogPrimitive.Root;\nconst DialogTrigger = DialogPrimitive.Trigger;\nconst DialogPortal = DialogPrimitive.Portal;\nconst DialogClose = DialogPrimitive.Close;\nconst DialogOverlay = React.forwardRef<React.ElementRef<typeof DialogPrimitive.Overlay>, React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>>(({\n  className,\n  ...props\n}, ref) => <DialogPrimitive.Overlay ref={ref} className={cn(\"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\", className)} {...props} />);\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\nconst DialogContent = React.forwardRef<React.ElementRef<typeof DialogPrimitive.Content>, React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>>(({\n  className,\n  children,\n  ...props\n}, ref) => <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content ref={ref} className={cn(\"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\", className)} {...props}>\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>);\nDialogContent.displayName = DialogPrimitive.Content.displayName;\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => <div className={cn(\"flex flex-col space-y-1.5 text-center sm:text-left\", className)} {...props} data-sentry-component=\"DialogHeader\" data-sentry-source-file=\"dialog.tsx\" />;\nDialogHeader.displayName = \"DialogHeader\";\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => <div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", className)} {...props} data-sentry-component=\"DialogFooter\" data-sentry-source-file=\"dialog.tsx\" />;\nDialogFooter.displayName = \"DialogFooter\";\nconst DialogTitle = React.forwardRef<React.ElementRef<typeof DialogPrimitive.Title>, React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>>(({\n  className,\n  ...props\n}, ref) => <DialogPrimitive.Title ref={ref} className={cn(\"text-lg font-semibold leading-none tracking-tight\", className)} {...props} />);\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\nconst DialogDescription = React.forwardRef<React.ElementRef<typeof DialogPrimitive.Description>, React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>>(({\n  className,\n  ...props\n}, ref) => <DialogPrimitive.Description ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />);\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\nexport { Dialog, DialogPortal, DialogOverlay, DialogTrigger, DialogClose, DialogContent, DialogHeader, DialogFooter, DialogTitle, DialogDescription };","import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\nconst badgeVariants = cva(\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\", {\n  variants: {\n    variant: {\n      default: \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n      secondary: \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n      destructive: \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n      outline: \"text-foreground\"\n    }\n  },\n  defaultVariants: {\n    variant: \"default\"\n  }\n});\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {}\nfunction Badge({\n  className,\n  variant,\n  ...props\n}: BadgeProps) {\n  return <div className={cn(badgeVariants({\n    variant\n  }), className)} {...props} data-sentry-component=\"Badge\" data-sentry-source-file=\"badge.tsx\" />;\n}\nexport { Badge, badgeVariants };","import { initializeApp } from \"firebase/app\";\nimport { \n  getFirestore, \n  doc, \n  setDoc, \n  getDoc, \n  collection, \n  getDocs,\n  enableIndexedDbPersistence,\n  CACHE_SIZE_UNLIMITED,\n  initializeFirestore,\n  runTransaction,\n  serverTimestamp\n} from \"firebase/firestore\";\nimport type { ShiftTable } from \"@/types/types\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCkZ4bkcG0_3zc2H5WYelYyMgBWxcwVM74\",\n  authDomain: \"shiftsmaker.firebaseapp.com\",\n  projectId: \"shiftsmaker\",\n  storageBucket: \"shiftsmaker.firebasestorage.app\",\n  messagingSenderId: \"53828147940\",\n  appId: \"1:53828147940:web:5e15d67b613567b1dfaaf1\",\n  measurementId: \"G-QF8D8ZX77M\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firestore with settings for better offline support\nconst db = initializeFirestore(app, {\n  cacheSizeBytes: CACHE_SIZE_UNLIMITED\n});\n\n// Enable offline persistence\nenableIndexedDbPersistence(db).catch((err) => {\n  if (err.code === 'failed-precondition') {\n    // Multiple tabs open, persistence can only be enabled in one tab at a time.\n    console.log('Persistence failed: Multiple tabs open');\n  } else if (err.code === 'unimplemented') {\n    // The current browser doesn't support persistence\n    console.log('Persistence not supported by browser');\n  }\n});\n\nconst COLLECTION_NAME = 'shifts';\nconst DOCUMENT_ID = 'shiftTables';\nconst AGENTS_COLLECTION = 'agents';\nconst AGENTS_DOCUMENT = 'agentsList';\nconst DELETED_BACKUP_COLLECTION = 'deletedBackup';\n\n// Helper function to merge data intelligently\nfunction mergeData(currentData: any, newData: any) {\n  if (!currentData.tables || !newData.tables) {\n    return newData;\n  }\n\n  const currentTables = new Map(\n    currentData.tables.map((table: any) => [table.id, table])\n  );\n  const newTables = new Map(\n    newData.tables.map((table: any) => [table.id, table])\n  );\n\n  // Merge strategy: Keep the new tables, as they are the latest\n  return {\n    ...newData,\n    tables: Array.from(newTables.values())\n  };\n}\n\nexport async function saveToFirestore(data: any, collectionName: string, documentId: string) {\n  try {\n    const docRef = doc(db, collectionName, documentId);\n    \n    // Use transactions for all collections including shift tables\n    await runTransaction(db, async (transaction) => {\n      const docSnap = await transaction.get(docRef);\n      \n      if (!docSnap.exists()) {\n        // If document doesn't exist, create it\n        transaction.set(docRef, {\n          ...data,\n          lastModified: serverTimestamp(),\n          lastRead: serverTimestamp()\n        });\n      } else {\n        const currentData = docSnap.data();\n        \n        // Special handling for shift tables\n        if (collectionName === COLLECTION_NAME) {\n          // Create maps of current and new tables using table IDs as keys\n          const currentTables = new Map(\n            (currentData.tables || []).map((table: any) => [table.id, table])\n          );\n          const newTables = new Map(\n            (data.tables || []).map((table: any) => [table.id, table])\n          );\n          \n          // Merge tables: For each table in the new data, update or add it\n          newTables.forEach((table, id) => {\n            currentTables.set(id, table);\n          });\n          \n          // Convert back to array and update\n          transaction.set(docRef, {\n            tables: Array.from(currentTables.values()),\n            lastModified: serverTimestamp(),\n            lastRead: currentData.lastModified || serverTimestamp()\n          });\n        } else {\n          // For other collections, use the existing merge strategy\n          const mergedData = mergeData(currentData, data);\n          transaction.set(docRef, {\n            ...mergedData,\n            lastModified: serverTimestamp(),\n            lastRead: currentData.lastModified || serverTimestamp()\n          });\n        }\n      }\n    });\n\n    console.log('✅ Data saved successfully to Firestore');\n  } catch (error) {\n    console.error('Error saving to Firestore:', error);\n    throw error;\n  }\n}\n\nexport async function loadFromFirestore(collectionName: string, documentId: string) {\n  try {\n    const docRef = doc(db, collectionName, documentId);\n    const docSnap = await getDoc(docRef);\n    \n    if (docSnap.exists()) {\n      const data = docSnap.data();\n      // Remove internal fields before returning\n      const { lastModified, lastRead, ...cleanData } = data;\n      return cleanData;\n    } else {\n      console.log('No such document exists!');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error loading from Firestore:', error);\n    throw error;\n  }\n}\n\nexport async function saveAgents(agents: Record<string, string[]>) {\n  try {\n    await saveToFirestore({ agents }, AGENTS_COLLECTION, AGENTS_DOCUMENT);\n    console.log('✅ Agents saved successfully to Firestore');\n  } catch (error) {\n    console.error('Error saving agents:', error);\n    throw error;\n  }\n}\n\nexport async function loadAgents(): Promise<Record<string, string[]>> {\n  try {\n    const data = await loadFromFirestore(AGENTS_COLLECTION, AGENTS_DOCUMENT);\n    return data?.agents || { Egypt: [], Morocco: [] };\n  } catch (error) {\n    console.error('Error loading agents:', error);\n    return { Egypt: [], Morocco: [] };\n  }\n}\n\nexport async function saveShiftTables(tables: ShiftTable[]) {\n  try {\n    await saveToFirestore({ tables }, COLLECTION_NAME, DOCUMENT_ID);\n    console.log('✅ Shift tables saved successfully to Firestore');\n  } catch (error) {\n    console.error('Error saving shift tables:', error);\n    throw error;\n  }\n}\n\nexport async function loadShiftTables(): Promise<ShiftTable[]> {\n  try {\n    const data = await loadFromFirestore(COLLECTION_NAME, DOCUMENT_ID);\n    // Filter out deleted tables when loading, but keep them in Firebase\n    return data?.tables.filter((table: ShiftTable) => !table.isDeleted) || [];\n  } catch (error) {\n    console.error('Error loading shift tables:', error);\n    throw error;\n  }\n}\n\nexport async function saveDeletedTable(table: ShiftTable) {\n  try {\n    const docRef = doc(db, DELETED_BACKUP_COLLECTION, table.id);\n    await setDoc(docRef, { \n      ...table, \n      deletedAt: new Date().toISOString() \n    });\n    console.log('✅ Deleted table backed up successfully');\n  } catch (error) {\n    console.error('Error backing up deleted table:', error);\n  }\n}\n","'use client';\n\nimport { useEffect, useState } from 'react';\nexport function useClientAnalyticsFilters() {\n  const [filters, setFilters] = useState<{\n    startDate: string | null;\n    endDate: string | null;\n    country: 'Egypt' | 'Morocco';\n    view: string;\n  }>(() => {\n    const defaultFilters = {\n      startDate: null,\n      endDate: null,\n      country: 'Egypt',\n      view: 'all-time'\n    };\n    try {\n      if (typeof window === 'undefined') return defaultFilters;\n      const savedFilters = localStorage.getItem('analyticsFilters');\n      return savedFilters ? JSON.parse(savedFilters) : defaultFilters;\n    } catch {\n      return defaultFilters;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem('analyticsFilters', JSON.stringify(filters));\n  }, [filters]);\n  return [filters, setFilters] as const;\n}","'use client';\n\nimport { useEffect, useState } from 'react';\nexport function useClientActiveCountries() {\n  const [activeCountries, setActiveCountries] = useState<{\n    Egypt: boolean;\n    Morocco: boolean;\n  }>(() => {\n    const defaultCountries = {\n      Egypt: true,\n      Morocco: false\n    };\n    try {\n      if (typeof window === 'undefined') return defaultCountries;\n      const savedCountries = localStorage.getItem('activeCountries');\n      return savedCountries ? JSON.parse(savedCountries) : defaultCountries;\n    } catch {\n      return defaultCountries;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem('activeCountries', JSON.stringify(activeCountries));\n  }, [activeCountries]);\n  return [activeCountries, setActiveCountries] as const;\n}","'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, SelectGroup, SelectLabel } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { LogOut, Plus, Trash2, Calendar, User, Edit, Globe, BarChart, Archive, ChevronDown, ChevronUp, Flag, ArrowUpFromLine, Clock } from 'lucide-react';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger, DialogFooter } from \"@/components/ui/dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { cn } from \"@/lib/utils\";\nimport toast from 'react-hot-toast';\nimport { loadShiftTables, saveShiftTables, loadAgents, saveAgents, saveDeletedTable } from '@/lib/firebase';\nimport type { ShiftTable, ShiftType, Task, Agent } from '@/types/types';\nimport type { TaskType as ImportedTaskType } from '@/types/types';\nimport { useClientAnalyticsFilters } from './ClientAnalyticsFilters';\nimport { useClientActiveCountries } from './useClientActiveCountries';\nimport { useClientActiveTab } from './useClientActiveTab';\ntype TaskType = ImportedTaskType;\nconst shiftDetails: Record<ShiftType, {\n  timeRange: string;\n  timeSlots: string[];\n  theme: string;\n}> = {\n  'Morning': {\n    timeRange: '08:00 to 16:00',\n    timeSlots: ['08:00-09:00', '09:00-10:00', '10:00-11:00', '11:00-12:00', '12:00-13:00', '13:00-14:00', '14:00-15:00', '15:00-16:00'],\n    theme: 'from-yellow-50 to-yellow-100 hover:to-yellow-200'\n  },\n  'Day': {\n    timeRange: '16:00 to 00:00',\n    timeSlots: ['16:00-17:00', '17:00-18:00', '18:00-19:00', '19:00-20:00', '20:00-21:00', '21:00-22:00', '22:00-23:00', '23:00-00:00'],\n    theme: 'from-blue-50 to-blue-100 hover:to-blue-200'\n  },\n  'Afternoon': {\n    timeRange: '10:00 to 18:00',\n    timeSlots: ['10:00-11:00', '11:00-12:00', '12:00-13:00', '13:00-14:00', '14:00-15:00', '15:00-16:00', '16:00-17:00', '17:00-18:00'],\n    theme: 'from-orange-50 to-orange-100 hover:to-orange-200'\n  },\n  'Evening': {\n    timeRange: '18:00 to 02:00',\n    timeSlots: ['18:00-19:00', '19:00-20:00', '20:00-21:00', '21:00-22:00', '22:00-23:00', '23:00-00:00', '00:00-01:00', '01:00-02:00'],\n    theme: 'from-purple-50 to-purple-100 hover:to-purple-200'\n  },\n  'Night': {\n    timeRange: '00:00 to 08:00',\n    timeSlots: ['00:00-01:00', '01:00-02:00', '02:00-03:00', '03:00-04:00', '04:00-05:00', '05:00-06:00', '06:00-07:00', '07:00-08:00'],\n    theme: 'from-indigo-50 to-indigo-100 hover:to-indigo-200'\n  }\n};\nconst shiftOrder: Record<ShiftType, number> = {\n  'Morning': 0,\n  'Afternoon': 1,\n  'Day': 2,\n  'Evening': 3,\n  'Night': 4\n};\nconst taskTypesByCountry: Record<string, TaskType[]> = {\n  'Egypt': ['Chat', 'Appeals/Reviews', 'Appeals/Reviews/Calls', 'Calls', 'Calls /App follow', 'Emails', 'Appeals/Reviews/Calls/App follow', 'App follow', 'Break', 'Sick'],\n  'Morocco': ['Chat', 'Chat/Appeals+Reviews', 'Chat /Emails+Groups+ Calls', 'Emails ( New ) + Appeals+ Calls', 'Emails (Need attention) + Reviews + Groups', 'All tasks + Calls', 'Break', 'Sick']\n};\nconst taskOptions = {\n  Egypt: [{\n    value: 'Chat',\n    label: 'Chat'\n  }, {\n    value: 'Appeals/Reviews',\n    label: 'Appeals/Reviews'\n  }, {\n    value: 'Appeals/Reviews/Calls',\n    label: 'Appeals/Reviews/Calls'\n  }, {\n    value: 'Calls',\n    label: 'Calls'\n  }, {\n    value: 'Calls /App follow',\n    label: 'Calls /App follow'\n  }, {\n    value: 'Emails',\n    label: 'Emails'\n  }, {\n    value: 'Appeals/Reviews/Calls/App follow',\n    label: 'Appeals/Reviews/Calls/App follow'\n  }, {\n    value: 'App follow',\n    label: 'App follow'\n  }, {\n    value: 'Break',\n    label: 'Break'\n  }, {\n    value: 'Sick',\n    label: 'Sick'\n  }],\n  Morocco: [{\n    value: 'Chat',\n    label: 'Chat'\n  }, {\n    value: 'Chat/Appeals+Reviews',\n    label: 'Chat/Appeals+Reviews'\n  }, {\n    value: 'Chat /Emails+Groups+ Calls',\n    label: 'Chat /Emails+Groups+ Calls'\n  }, {\n    value: 'Emails ( New ) + Appeals+ Calls',\n    label: 'Emails ( New ) + Appeals+ Calls'\n  }, {\n    value: 'Emails (Need attention) + Reviews + Groups',\n    label: 'Emails (Need attention) + Reviews + Groups'\n  }, {\n    value: 'All tasks + Calls',\n    label: 'All tasks + Calls'\n  }, {\n    value: 'Break',\n    label: 'Break'\n  }, {\n    value: 'Sick',\n    label: 'Sick'\n  }]\n};\nconst taskThemes: Record<TaskType, string> = {\n  // Egypt Tasks\n  'Chat': 'from-emerald-200 to-teal-200',\n  'Appeals/Reviews': 'from-blue-200 to-cyan-200',\n  'Appeals/Reviews/Calls': 'from-indigo-200 to-blue-200',\n  'Calls': 'from-violet-200 to-purple-200',\n  'Calls /App follow': 'from-purple-200 to-pink-200',\n  'Emails': 'from-amber-200 to-yellow-200',\n  'Appeals/Reviews/Calls/App follow': 'from-rose-200 to-pink-200',\n  'App follow': 'from-sky-200 to-blue-200',\n  // Morocco Tasks\n  'Chat/Appeals+Reviews': 'from-blue-200 to-cyan-200',\n  'Chat /Emails+Groups+ Calls': 'from-blue-200 to-cyan-200',\n  'Emails ( New ) + Appeals+ Calls': 'from-amber-200 to-yellow-200',\n  'Emails (Need attention) + Reviews + Groups': 'from-violet-200 to-purple-200',\n  'All tasks + Calls': 'from-rose-200 to-pink-200',\n  // Common Tasks\n  'Break': 'from-gray-200 to-slate-200',\n  'Sick': 'from-red-200 to-rose-200'\n};\nconst initialAgents = {\n  Egypt: [\"Eman Anwer\", \"Noura Emam\", \"Mai Tarek Kamell Hessen\", \"Abdelhamid Khamis\", \"Ahmad Gamal Anwer\", \"Ahmad Sobhy\", \"Ahmed Moustafa\", \"Omnia Ahmed\", \"Mohammed Hamdy\", \"Ahmed Mohamed Ahmed\", \"Abdulrahman Sayed Gomaa Mohamed\", \"Ibrahim Zaki\", \"Amira Tarek Taher Megahed\", \"Esraa Osama\", \"Sara Mourad Wahba Mikhael\", \"Mahmoud Aataf\", \"Rawan AbdElbast\", \"Abdelaziz\", \"Mohamed Ali\", \"Moaz Yousef\", \"Eslam Nasser\", \"Asmaa Gamal Kamel\", \"Yasmine Tarek\", \"Asmaa Mohamed Zawam\", \"Nouran Ramdan\", \"Eman Mohsen\", \"Mohamed Osama\", \"Eslam Mohammed El Sayed Awad\", \"Shreif Abdrabo\", \"Michael Magdy\", \"Mohamedd Essam\", \"Sara Abdelrazek\", \"Ahmed Osama\", \"Hesham Adawy\", \"Sameh Adel Farah Ahmed\", \"Mohamed Mostafa Isawi Ali\", \"Mayan\", \"Amr Nady\", \"Abdulhamid Mostafa\", \"Fatima\", \"Youmna Yousef\", \"Heba Raafat\", \"Mahmoud Gamil abdelaziz\", \"Kareem abubakr\", \"Alaa Elsayed\", \"Rahma Hassan Abdelrahman\", \"Ahmed Shaaban\"],\n  Morocco: [\"Yasser Marrou\", \"Mariem Abdelhakmi\", \"Zaynab Adil\", \"Meryem Mazroui\", \"Mohammad Aznague\", \"Achraf Tazi\", \"Mohamed Elhachmi\", \"Mohamed ougrni\", \"Kenza Abbadi\", \"Marouan Bajbouji\", \"Hamza Sahraoui\", \"Nouhaila Essalih\", \"Nada Bennis\", \"Aziz Dhraief\", \"Anis Boujmil\"]\n};\nfunction LoginForm({\n  onLogin\n}: {\n  onLogin: () => void;\n}) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      if (username === 'admin' && password === 'Thinkdiffrent@123369') {\n        onLogin();\n      } else {\n        setError('Invalid username or password');\n      }\n    } catch (error) {\n      setError('An error occurred during login');\n      console.error('Login error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return <Card className=\"w-[350px] mx-auto mt-8\" data-sentry-element=\"Card\" data-sentry-component=\"LoginForm\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n      <CardHeader data-sentry-element=\"CardHeader\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <CardTitle className=\"text-2xl font-bold text-center\" data-sentry-element=\"CardTitle\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Admin Login</CardTitle>\n      </CardHeader>\n      <CardContent data-sentry-element=\"CardContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"username\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Username</Label>\n            <Input id=\"username\" type=\"text\" value={username} onChange={e => setUsername(e.target.value)} disabled={isLoading} required data-sentry-element=\"Input\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"password\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Password</Label>\n            <Input id=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} disabled={isLoading} required data-sentry-element=\"Input\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n          </div>\n          {error && <p className=\"text-sm text-red-500\">{error}</p>}\n          <Button type=\"submit\" className=\"w-full\" disabled={isLoading} data-sentry-element=\"Button\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            {isLoading ? <>Loading...</> : <>\n                <LogOut className=\"mr-2 h-4 w-4\" /> Login\n              </>}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>;\n}\nfunction AdminView({\n  shiftTables,\n  setShiftTables,\n  publishedTables,\n  setPublishedTables,\n  updateTablesAndSync,\n  activeCountries,\n  setActiveCountries\n}: {\n  shiftTables: ShiftTable[];\n  setShiftTables: React.Dispatch<React.SetStateAction<ShiftTable[]>>;\n  publishedTables: ShiftTable[];\n  setPublishedTables: React.Dispatch<React.SetStateAction<ShiftTable[]>>;\n  updateTablesAndSync: (tables: ShiftTable[]) => Promise<void>;\n  activeCountries: {\n    Egypt: boolean;\n    Morocco: boolean;\n  };\n  setActiveCountries: React.Dispatch<React.SetStateAction<{\n    Egypt: boolean;\n    Morocco: boolean;\n  }>>;\n}) {\n  const [newShiftType, setNewShiftType] = useState<ShiftType>('Morning');\n  const [splitInterval, setSplitInterval] = useState<number>(1);\n  const [splitIntervalInput, setSplitIntervalInput] = useState<string>(\"1\");\n  const [previewTimeSlots, setPreviewTimeSlots] = useState<string[]>([]);\n  const [splitWarning, setSplitWarning] = useState<string>('');\n  const [agents, setAgents] = useState<Record<'Egypt' | 'Morocco', string[]>>(initialAgents);\n  const [newAgentName, setNewAgentName] = useState('');\n  const [newAgentCountry, setNewAgentCountry] = useState<'Egypt' | 'Morocco'>('Egypt');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [newSeniorName, setNewSeniorName] = useState('');\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState<{\n    type: 'delete' | 'archive';\n    tableId: string;\n    password?: string;\n  } | null>(null);\n  const saveTable = async (id: string) => {\n    try {\n      const tableToSave = shiftTables.find(table => table.id === id);\n      if (tableToSave) {\n        await saveShiftTables(shiftTables);\n        toast.success('Table saved successfully');\n      }\n    } catch (error) {\n      console.error('Error saving table:', error);\n      toast.error('Failed to save table');\n    }\n  };\n  const handleSplitIntervalChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseFloat(e.target.value);\n    if (isNaN(value)) return;\n    if (value < 1) {\n      setSplitWarning('Minimum interval is 1 hour');\n      return;\n    }\n    if (value > 8) {\n      setSplitWarning('Maximum interval is 8 hours');\n      return;\n    }\n    setSplitInterval(value);\n    setSplitIntervalInput(e.target.value);\n    const timeSlots = generateTimeSlots(value, newShiftType);\n    setPreviewTimeSlots(timeSlots);\n    if (timeSlots.length > 8) {\n      setSplitWarning('Warning: More than 8 time slots');\n    } else {\n      setSplitWarning('');\n    }\n  }, [newShiftType]);\n  const generateTimeSlots = (interval: number, shiftType: ShiftType = 'Morning') => {\n    const timeSlots: string[] = [];\n    const shiftRanges = {\n      'Morning': {\n        start: 8,\n        end: 16\n      },\n      'Afternoon': {\n        start: 10,\n        end: 18\n      },\n      'Day': {\n        start: 16,\n        end: 24\n      },\n      'Evening': {\n        start: 18,\n        end: 26\n      },\n      // 26 represents 2:00 next day\n      'Night': {\n        start: 0,\n        end: 8\n      }\n    };\n    const {\n      start,\n      end\n    } = shiftRanges[shiftType];\n    let currentTime = start;\n    while (currentTime < end) {\n      const endTime = Math.min(currentTime + interval, end);\n      const startHour = Math.floor(currentTime) % 24;\n      const startMinutes = Math.round(currentTime % 1 * 60);\n      const endHour = Math.floor(endTime) % 24;\n      const endMinutes = Math.round(endTime % 1 * 60);\n      const startStr = `${startHour.toString().padStart(2, '0')}:${startMinutes.toString().padStart(2, '0')}`;\n      const endStr = `${endHour.toString().padStart(2, '0')}:${endMinutes.toString().padStart(2, '0')}`;\n      timeSlots.push(`${startStr}-${endStr}`);\n      currentTime = endTime;\n    }\n    return timeSlots;\n  };\n  const handleShiftTypeChange = (type: ShiftType) => {\n    setNewShiftType(type);\n    const timeSlots = generateTimeSlots(splitInterval, type);\n    setPreviewTimeSlots(timeSlots);\n  };\n\n  // Initialize time slots on mount\n  useEffect(() => {\n    const timeSlots = generateTimeSlots(splitInterval, newShiftType);\n    setPreviewTimeSlots(timeSlots);\n  }, [newShiftType, splitInterval]);\n\n  // Load agents from Firebase\n  useEffect(() => {\n    const loadSavedAgents = async () => {\n      try {\n        const savedAgents = await loadAgents();\n        if (Object.keys(savedAgents).length > 0) {\n          setAgents(savedAgents);\n        }\n      } catch (error) {\n        console.error('Error loading agents:', error);\n        toast.error('Failed to load agents');\n      }\n    };\n    loadSavedAgents();\n  }, []);\n\n  // Save agents whenever they change\n  useEffect(() => {\n    const saveAgentsToFirebase = async () => {\n      try {\n        await saveAgents(agents);\n      } catch (error) {\n        console.error('Error saving agents:', error);\n      }\n    };\n    saveAgentsToFirebase();\n  }, [agents]);\n  const updateShiftTable = (id: string, field: keyof ShiftTable, value: \"Egypt\" | \"Morocco\" | null | undefined | boolean | string) => {\n    const updatedTables = shiftTables.map(table => {\n      if (table.id === id) {\n        // When publishing, preserve existing tasks\n        if (field === 'publishedTo') {\n          return {\n            ...table,\n            [field]: value as \"Egypt\" | \"Morocco\" | null | undefined,\n            agents: table.agents.map(agent => ({\n              ...agent,\n              tasks: agent.tasks || Array(table.timeSlots.length).fill(null)\n            }))\n          };\n        }\n        return {\n          ...table,\n          [field]: value\n        };\n      }\n      return table;\n    });\n    updateTablesAndSync(updatedTables);\n  };\n  const addAgent = (tableId: string) => {\n    const updatedTables = shiftTables.map(table => {\n      if (table.id === tableId) {\n        const newAgent: Agent = {\n          name: '',\n          tasks: Array(table.timeSlots.length).fill(null)\n        };\n        return {\n          ...table,\n          agents: [...table.agents, newAgent]\n        };\n      }\n      return table;\n    });\n    updateTablesAndSync(updatedTables);\n  };\n  const deleteAgent = (tableId: string, agentIndex: number) => {\n    const updatedTables = shiftTables.map(table => {\n      if (table.id === tableId) {\n        const updatedAgents = [...table.agents];\n        updatedAgents.splice(agentIndex, 1);\n        return {\n          ...table,\n          agents: updatedAgents\n        };\n      }\n      return table;\n    });\n    updateTablesAndSync(updatedTables);\n    toast.success('Agent removed successfully');\n  };\n  const updateAgentName = async (tableId: string, agentIndex: number, agentName: string) => {\n    try {\n      const updatedTables = shiftTables.map(table => {\n        if (table.id === tableId) {\n          const tableAgents = getAvailableAgents(table.country);\n          if (!tableAgents.includes(agentName)) {\n            throw new Error(`Agent ${agentName} is not available for ${table.country}`);\n          }\n          const newAgents = [...table.agents];\n          newAgents[agentIndex] = {\n            name: agentName,\n            tasks: Array(table.timeSlots.length).fill(null)\n          };\n          return {\n            ...table,\n            agents: newAgents\n          };\n        }\n        return table;\n      });\n      setShiftTables(updatedTables);\n      await saveShiftTables(updatedTables);\n      toast.success('Agent updated successfully');\n    } catch (error) {\n      console.error('Error updating agent:', error);\n      toast.error('Failed to update agent');\n    }\n  };\n  const updateAgentTask = async (tableId: string, agentIndex: number, taskIndex: number, taskType: TaskType) => {\n    try {\n      const updatedTables = shiftTables.map(table => {\n        if (table.id === tableId) {\n          const updatedAgents = [...table.agents];\n          if (!updatedAgents[agentIndex].tasks) {\n            updatedAgents[agentIndex].tasks = [];\n          }\n          updatedAgents[agentIndex].tasks[taskIndex] = {\n            type: taskType\n          };\n          return {\n            ...table,\n            agents: updatedAgents\n          };\n        }\n        return table;\n      });\n      await updateTablesAndSync(updatedTables);\n    } catch (error) {\n      console.error('Error updating agent task:', error);\n      toast.error('Failed to update task');\n    }\n  };\n  const removeShiftTable = async (id: string) => {\n    if (!id) {\n      console.error('Invalid table ID provided to removeShiftTable');\n      return;\n    }\n    const tableToDelete = shiftTables.find(table => table.id === id);\n    if (!tableToDelete) {\n      toast.error('Table not found');\n      return;\n    }\n    if (!window.confirm(`Are you sure you want to delete this ${tableToDelete.shiftType} shift table for ${tableToDelete.country}?`)) {\n      return;\n    }\n    const password = window.prompt('Please enter the password to confirm deletion:');\n    if (password !== 'admin@') {\n      toast.error('Incorrect password');\n      return;\n    }\n    try {\n      // First backup the table\n      await saveDeletedTable(tableToDelete);\n\n      // Then mark as deleted\n      const updatedTables = shiftTables.map(table => table.id === id ? {\n        ...table,\n        isDeleted: true\n      } : table);\n      await updateTablesAndSync(updatedTables);\n      toast.success('Table deleted successfully');\n    } catch (error) {\n      console.error('Error deleting table:', error);\n      toast.error('Failed to delete table');\n    }\n  };\n  const updateShiftTables = async (updatedShiftTables: ShiftTable[]) => {\n    try {\n      await saveShiftTables(updatedShiftTables);\n      setShiftTables(updatedShiftTables);\n      toast.success('Changes saved successfully');\n    } catch (error: any) {\n      console.error('Error saving shift tables:', error.message);\n      toast.error('Failed to save changes');\n    }\n  };\n  const handleArchiveTable = async (id: string) => {\n    if (!id) {\n      console.error('Invalid table ID provided to handleArchiveTable');\n      return;\n    }\n    try {\n      // First confirm if user wants to archive\n      const confirmArchive = window.confirm('Are you sure you want to archive this shift table?');\n      if (!confirmArchive) return;\n\n      // Then prompt for password\n      const password = window.prompt('Please enter the password to archive:');\n      if (password !== 'admin@') {\n        toast.error('Incorrect password. Action cancelled.');\n        return;\n      }\n      const updatedTables: ShiftTable[] = shiftTables.map(table => ({\n        ...table,\n        publishedTo: table.id === id ? table.country : table.publishedTo\n      }));\n      await updateTablesAndSync(updatedTables);\n      const targetTable = shiftTables.find(t => t.id === id);\n      if (targetTable) {\n        toast.success(`Table published to ${targetTable.country}`);\n      }\n    } catch (error) {\n      console.error('Error archiving table:', error);\n      toast.error('Failed to archive table');\n    }\n  };\n  const publishTable = async (id: string) => {\n    const tableToPublish = shiftTables.find(table => table.id === id);\n    if (!tableToPublish) {\n      toast.error('Table not found');\n      return;\n    }\n\n    // Use the table's own country property instead of activeCountries\n    const updatedTables: ShiftTable[] = shiftTables.map(table => ({\n      ...table,\n      publishedTo: table.id === id ? tableToPublish.country : table.publishedTo\n    }));\n    await updateTablesAndSync(updatedTables);\n    toast.success(`Table published to ${tableToPublish.country}`);\n  };\n  const unpublishTable = async (id: string) => {\n    const updatedTables: ShiftTable[] = shiftTables.map(table => ({\n      ...table,\n      publishedTo: table.id === id ? null : table.publishedTo\n    }));\n    await updateTablesAndSync(updatedTables);\n  };\n  const addNewAgent = async () => {\n    if (newAgentName.trim()) {\n      try {\n        const updatedAgents = {\n          ...agents,\n          [newAgentCountry]: [...(agents[newAgentCountry] || []), newAgentName.trim()]\n        };\n\n        // Save to Firebase\n        await saveAgents(updatedAgents);\n\n        // Update local state\n        setAgents(updatedAgents);\n\n        // Clear input\n        setNewAgentName('');\n        toast.success('Agent added successfully');\n      } catch (error) {\n        console.error('Error adding agent:', error);\n        toast.error('Failed to add agent. Please try again.');\n      }\n    }\n  };\n  const canArchiveDay = (date: string) => {\n    const tablesForDay = shiftTables.filter(table => table.date === date && !table.isArchived);\n    const shiftTypes = new Set(tablesForDay.map(table => table.shiftType));\n    return shiftTypes.has('Morning') && shiftTypes.has('Night');\n  };\n  const tablesByDate = shiftTables.filter(table => !table.isArchived).reduce((acc, table) => {\n    if (!acc[table.date]) {\n      acc[table.date] = [];\n    }\n    acc[table.date].push(table);\n    return acc;\n  }, {} as Record<string, ShiftTable[]>);\n  const handleCountryChange = (country: 'Egypt' | 'Morocco') => {\n    // If the current country is already selected, don't allow deselecting it\n    if (activeCountries[country]) return;\n\n    // Set the selected country to true and the other to false\n    const newActiveCountries = {\n      Egypt: country === 'Egypt',\n      Morocco: country === 'Morocco'\n    };\n    setActiveCountries(newActiveCountries);\n    // Save to localStorage immediately\n    localStorage.setItem('activeCountries', JSON.stringify(newActiveCountries));\n  };\n  const getAvailableAgents = (tableCountry: 'Egypt' | 'Morocco') => {\n    return agents[tableCountry] || initialAgents[tableCountry] || [];\n  };\n  const TaskSelect = ({\n    value,\n    onChange,\n    country\n  }: {\n    value: string;\n    onChange: (value: string) => void;\n    country: string;\n  }) => {\n    return <Select value={value} onValueChange={onChange} data-sentry-element=\"Select\" data-sentry-component=\"TaskSelect\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <SelectTrigger data-sentry-element=\"SelectTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <SelectValue data-sentry-element=\"SelectValue\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n        </SelectTrigger>\n        <SelectContent data-sentry-element=\"SelectContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          {taskOptions[country as keyof typeof taskOptions].map(option => <SelectItem key={option.value} value={option.value}>\n              {option.label}\n            </SelectItem>)}\n        </SelectContent>\n      </Select>;\n  };\n  const renderAgentSelect = (shiftTable: ShiftTable, agent: Agent | null, index: number) => {\n    const tableAgents = getAvailableAgents(shiftTable.country);\n    return <Select value={agent?.name || ''} onValueChange={value => updateAgentName(shiftTable.id, index, value)} data-sentry-element=\"Select\" data-sentry-component=\"renderAgentSelect\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <SelectTrigger className=\"w-[200px]\" data-sentry-element=\"SelectTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <SelectValue placeholder=\"Select agent\" data-sentry-element=\"SelectValue\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n        </SelectTrigger>\n        <SelectContent data-sentry-element=\"SelectContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <SelectGroup data-sentry-element=\"SelectGroup\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            <SelectLabel data-sentry-element=\"SelectLabel\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Agents</SelectLabel>\n            {tableAgents.map(agent => <SelectItem key={agent} value={agent}>\n                {agent}\n              </SelectItem>)}\n          </SelectGroup>\n        </SelectContent>\n    </Select>;\n  };\n  useEffect(() => {\n    const savedCountries = localStorage.getItem('activeCountries');\n    if (savedCountries) {\n      setActiveCountries(JSON.parse(savedCountries));\n    }\n    const savedAgents = localStorage.getItem('agents');\n    if (savedAgents) {\n      setAgents(JSON.parse(savedAgents));\n    }\n  }, []);\n  useEffect(() => {\n    const loadTempChanges = () => {\n      const tempTablesStr = localStorage.getItem('tempShiftTables');\n      if (tempTablesStr) {\n        try {\n          const tempTables = JSON.parse(tempTablesStr);\n          if (Array.isArray(tempTables)) {\n            setShiftTables(tempTables);\n          }\n        } catch (error) {\n          console.error('Error loading temporary changes:', error);\n        }\n      }\n    };\n    loadTempChanges();\n  }, [setShiftTables]);\n  useEffect(() => {\n    localStorage.setItem('activeCountries', JSON.stringify(activeCountries));\n  }, [activeCountries, setActiveCountries]);\n  const addNewShiftTable = async () => {\n    try {\n      const selectedCountry = activeCountries.Egypt ? 'Egypt' : 'Morocco';\n      const newTable: ShiftTable = {\n        id: crypto.randomUUID(),\n        date: selectedDate,\n        shiftType: newShiftType,\n        country: selectedCountry,\n        timeSlots: generateTimeSlots(splitInterval, newShiftType),\n        agents: [],\n        isArchived: false,\n        isDeleted: false,\n        senior: newSeniorName,\n        publishedTo: null,\n        manuallyUnarchived: false,\n        shifts: {\n          Morning: [],\n          Day: [],\n          Afternoon: [],\n          Evening: [],\n          Night: []\n        }\n      };\n      const updatedTables = [...shiftTables, newTable];\n      await updateTablesAndSync(updatedTables);\n      toast.success('New shift table created successfully');\n    } catch (error) {\n      console.error('Error creating new shift table:', error);\n      toast.error('Failed to create new shift table');\n    }\n  };\n  const handleConfirmAction = async () => {\n    if (!confirmAction) return;\n    const password = confirmAction.password;\n    if (password !== 'admin@') {\n      toast.error('Incorrect password');\n      return;\n    }\n    try {\n      const updatedTables = shiftTables.map(table => table.id === confirmAction.tableId ? {\n        ...table,\n        ...(confirmAction.type === 'delete' ? {\n          isDeleted: true\n        } : {\n          isArchived: true\n        })\n      } : table);\n      await updateTablesAndSync(updatedTables);\n      toast.success(`Table ${confirmAction.type === 'delete' ? 'deleted' : 'archived'} successfully`);\n    } catch (error) {\n      toast.error('An error occurred. Please try again.');\n    }\n    setConfirmDialogOpen(false);\n    setConfirmAction(null);\n  };\n  const openConfirmDialog = (type: 'delete' | 'archive', tableId: string) => {\n    setConfirmAction({\n      type,\n      tableId\n    });\n    setConfirmDialogOpen(true);\n  };\n  return <div className=\"container mx-auto p-4 space-y-8\" data-sentry-component=\"AdminView\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n      <Card data-sentry-element=\"Card\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <CardHeader data-sentry-element=\"CardHeader\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <CardTitle data-sentry-element=\"CardTitle\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Active Country</CardTitle>\n          <CardDescription data-sentry-element=\"CardDescription\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Select which country's schedule to manage</CardDescription>\n        </CardHeader>\n        <CardContent data-sentry-element=\"CardContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <div className=\"flex space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Switch id=\"egypt-switch\" checked={activeCountries.Egypt} onCheckedChange={() => handleCountryChange('Egypt')} data-sentry-element=\"Switch\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n              <Label htmlFor=\"egypt-switch\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Egypt</Label>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Switch id=\"morocco-switch\" checked={activeCountries.Morocco} onCheckedChange={() => handleCountryChange('Morocco')} data-sentry-element=\"Switch\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n              <Label htmlFor=\"morocco-switch\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Morocco</Label>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Dialog data-sentry-element=\"Dialog\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <DialogTrigger asChild data-sentry-element=\"DialogTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <Button variant=\"outline\" data-sentry-element=\"Button\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Add New Agent</Button>\n        </DialogTrigger>\n        <DialogContent data-sentry-element=\"DialogContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <DialogHeader data-sentry-element=\"DialogHeader\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            <DialogTitle data-sentry-element=\"DialogTitle\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Add New Agent</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"new-agent-name\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Agent Name</Label>\n              <Input id=\"new-agent-name\" value={newAgentName} onChange={e => setNewAgentName(e.target.value)} placeholder=\"Enter agent name\" data-sentry-element=\"Input\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n            </div>\n            <div>\n              <Label htmlFor=\"new-agent-country\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Country</Label>\n              <Select value={newAgentCountry} onValueChange={(value: 'Egypt' | 'Morocco') => setNewAgentCountry(value)} data-sentry-element=\"Select\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                <SelectTrigger data-sentry-element=\"SelectTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                  <SelectValue placeholder=\"Select country\" data-sentry-element=\"SelectValue\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n                </SelectTrigger>\n                <SelectContent data-sentry-element=\"SelectContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                  <SelectItem value=\"Egypt\" data-sentry-element=\"SelectItem\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Egypt</SelectItem>\n                  <SelectItem value=\"Morocco\" data-sentry-element=\"SelectItem\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Morocco</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <Button onClick={addNewAgent} data-sentry-element=\"Button\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Add Agent</Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {Object.entries(tablesByDate).map(([date, tables]) => <Card key={date} className=\"overflow-hidden\">\n          <CardHeader>\n            <CardTitle className=\"flex justify-between items-center\">\n              <div className=\"flex-1 flex items-center gap-2\">\n                <Calendar className=\"h-5 w-5\" />\n                <span>{new Date(date).toLocaleDateString('en-US', {\n                weekday: 'long',\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n              })}</span>\n              </div>\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {tables.map(shiftTable => <Card key={shiftTable.id} className={cn(\"overflow-hidden bg-gradient-to-br\", shiftDetails[shiftTable.shiftType].theme)}>\n                <CardHeader className=\"bg-white bg-opacity-30 backdrop-blur-sm\">\n                  <CardTitle className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center gap-2\">\n                      <span>{shiftTable.shiftType} Shift</span>\n                      <Badge variant=\"outline\" className=\"bg-white/50 backdrop-blur-sm\">\n                        <Globe className=\"mr-1 h-3 w-3\" />\n                        {shiftTable.country}\n                      </Badge>\n                      {shiftTable.publishedTo && <Badge variant=\"default\" className=\"bg-green-500\">\n                          Published\n                        </Badge>}\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      {shiftTable.publishedTo ? <Button variant=\"outline\" size=\"sm\" onClick={() => unpublishTable(shiftTable.id)}>\n                          Unpublish\n                        </Button> : <Button variant=\"outline\" size=\"sm\" onClick={() => publishTable(shiftTable.id)}>\n                          <Globe className=\"mr-2 h-4 w-4\" /> Publish\n                        </Button>}\n                      <Button variant=\"ghost\" size=\"icon\" onClick={() => openConfirmDialog('delete', shiftTable.id)} aria-label=\"Remove shift table\">\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                      <Button variant=\"ghost\" size=\"icon\" onClick={() => openConfirmDialog('archive', shiftTable.id)} className=\"hover:bg-purple-100\">\n                        <Archive className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </CardTitle>\n                  <div className=\"flex flex-wrap gap-4 items-center text-sm\">\n                    <div className=\"flex items-center gap-2\">\n                      <User className=\"h-4 w-4\" />\n                      <span>{shiftTable.senior}</span>\n                    </div>\n                    <span className=\"text-sm font-medium\">\n                      {shiftDetails[shiftTable.shiftType].timeRange}\n                    </span>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <div className=\"overflow-x-auto\">\n                    <Table>\n                      <TableHeader>\n                        <TableRow>\n                          <TableHead className=\"w-[150px] bg-white bg-opacity-30 backdrop-blur-sm sticky left-0 z-20\">Agent's Name</TableHead>\n                          {shiftTable.timeSlots.map((slot, index) => <TableHead key={index} className=\"text-center bg-white bg-opacity-30 backdrop-blur-sm\">\n                              {slot}\n                            </TableHead>)}\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {shiftTable.agents.map((agent, index) => {\n                    const isAgentSick = agent.tasks.some(task => task?.type === 'Sick');\n                    return <TableRow key={index} className={cn(isAgentSick && \"bg-gray-100\")}>\n                              <TableCell className={cn(\"bg-white bg-opacity-30 backdrop-blur-sm sticky left-0 z-10\", agent.highlight && \"bg-orange-200 bg-opacity-60\")}>\n                                <div className=\"flex items-center gap-2\">\n                                  <Select value={agent.name} onValueChange={value => updateAgentName(shiftTable.id, index, value)}>\n                                    <SelectTrigger className=\"w-[180px]\">\n                                      <SelectValue placeholder=\"Select agent\" />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                      {getAvailableAgents(shiftTable.country).map(agent => <SelectItem key={agent} value={agent}>\n                                          {agent}\n                                        </SelectItem>)}\n                                    </SelectContent>\n                                  </Select>\n                                  <Button variant=\"ghost\" size=\"icon\" onClick={() => deleteAgent(shiftTable.id, index)} aria-label=\"Remove agent\">\n                                    <Trash2 className=\"h-4 w-4\" />\n                                  </Button>\n                                </div>\n                              </TableCell>\n                              {shiftTable.timeSlots.map((_, taskIndex) => <TableCell key={taskIndex} className=\"p-1\">\n                                  <div className=\"h-full\">\n                                    <Select value={agent.tasks[taskIndex]?.type || ''} onValueChange={(value: TaskType) => updateAgentTask(shiftTable.id, index, taskIndex, value)}>\n                                      <SelectTrigger className={cn(\"w-full h-full border-0 focus:ring-0\", agent.tasks[taskIndex] ? `bg-gradient-to-r ${taskThemes[agent.tasks[taskIndex].type]}` : \"bg-white\")}>\n                                        <SelectValue placeholder=\"Select task\" />\n                                      </SelectTrigger>\n                                      <SelectContent>\n                                        {taskTypesByCountry[shiftTable.country].map(type => <SelectItem key={type} value={type}>\n                                            {type}\n                                          </SelectItem>)}\n                                      </SelectContent>\n                                    </Select>\n                                  </div>\n                                </TableCell>)}\n                            </TableRow>;\n                  })}\n                      </TableBody>\n                    </Table>\n                  </div>\n                  <div className=\"p-4\">\n                    <Button onClick={() => addAgent(shiftTable.id)} variant=\"outline\" className=\"w-full\">\n                      <Plus className=\"mr-2 h-4 w-4\" /> Add Agent\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>)}\n          </CardContent>\n        </Card>)}\n      <Dialog data-sentry-element=\"Dialog\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <DialogTrigger asChild data-sentry-element=\"DialogTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <Button className=\"mt-4 w-full\" data-sentry-element=\"Button\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            <Plus className=\"mr-2 h-4 w-4\" data-sentry-element=\"Plus\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" /> Create New Shift Table\n          </Button>\n        </DialogTrigger>\n        <DialogContent data-sentry-element=\"DialogContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <DialogHeader data-sentry-element=\"DialogHeader\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            <DialogTitle data-sentry-element=\"DialogTitle\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Create New Shift Table</DialogTitle>\n            <div className=\"space-y-2\">\n              <DialogDescription data-sentry-element=\"DialogDescription\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                Fill in the details for your new shift table.\n              </DialogDescription>\n              <div className=\"flex items-center gap-2\">\n                <Badge variant=\"outline\" data-sentry-element=\"Badge\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                  <Globe className=\"mr-1 h-3 w-3\" data-sentry-element=\"Globe\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n                  Creating for: {activeCountries.Egypt ? 'Egypt' : 'Morocco'}\n                </Badge>\n              </div>\n            </div>\n          </DialogHeader>\n          <div className=\"space-y-4 py-4\">\n            <div className=\"grid gap-4\">\n              <div className=\"flex flex-col space-y-1.5\">\n                <Label htmlFor=\"shiftType\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Shift Type</Label>\n                <Select value={newShiftType} onValueChange={(value: ShiftType) => handleShiftTypeChange(value)} data-sentry-element=\"Select\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                  <SelectTrigger data-sentry-element=\"SelectTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                    <SelectValue placeholder=\"Select shift type\" data-sentry-element=\"SelectValue\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n                  </SelectTrigger>\n                  <SelectContent position=\"popper\" data-sentry-element=\"SelectContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                    {Object.keys(shiftDetails).map(type => <SelectItem key={type} value={type}>\n                        {type}\n                      </SelectItem>)}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"flex flex-col space-y-1.5\">\n                <Label htmlFor=\"date\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Date</Label>\n                <Input id=\"date\" type=\"date\" value={selectedDate} onChange={e => setSelectedDate(e.target.value)} data-sentry-element=\"Input\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n              </div>\n\n              <div className=\"flex flex-col space-y-1.5\">\n                <Label htmlFor=\"seniorName\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Senior Name</Label>\n                <Input id=\"seniorName\" type=\"text\" value={newSeniorName} onChange={e => setNewSeniorName(e.target.value)} placeholder=\"Enter senior name\" data-sentry-element=\"Input\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n              </div>\n\n              <div className=\"flex flex-col space-y-1.5\">\n                <Label htmlFor=\"splitInterval\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Split Interval (hours)</Label>\n                <Input type=\"number\" step=\"1\" min=\"1\" max=\"8\" value={splitIntervalInput} onChange={handleSplitIntervalChange} className={cn(\"w-20\", splitWarning ? \"border-red-500 focus:ring-red-500\" : \"\")} data-sentry-element=\"Input\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n                <Label className=\"text-sm text-muted-foreground\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Hour intervals</Label>\n              </div>\n            </div>\n            {/* Preview section */}\n            <div className=\"space-y-2\">\n              <Label className=\"text-sm font-medium\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Preview Time Slots:</Label>\n              <div className=\"bg-muted/50 p-3 rounded-md\">\n                {previewTimeSlots.length > 0 ? <div className=\"flex flex-wrap gap-2\">\n                    {previewTimeSlots.map((slot, index) => <Badge key={index} variant=\"secondary\" className=\"flex items-center gap-1\">\n                        <Clock className=\"h-3 w-3\" />\n                        {slot}\n                      </Badge>)}\n                  </div> : <div className=\"text-sm text-muted-foreground text-center py-2\">\n                    Enter a valid interval to see time slots\n                  </div>}\n              </div>\n              {splitWarning && <div className=\"text-sm text-yellow-600 dark:text-yellow-500 flex items-center gap-2 bg-yellow-50 dark:bg-yellow-900/20 p-2 rounded\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                  </svg>\n                  {splitWarning}\n                </div>}\n            </div>\n          </div>\n          <Button onClick={addNewShiftTable} data-sentry-element=\"Button\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Create Shift Table</Button>\n        </DialogContent>\n      </Dialog>\n      <Dialog open={confirmDialogOpen} onOpenChange={setConfirmDialogOpen} data-sentry-element=\"Dialog\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <DialogContent data-sentry-element=\"DialogContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <DialogHeader data-sentry-element=\"DialogHeader\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            <DialogTitle data-sentry-element=\"DialogTitle\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n              {confirmAction?.type === 'delete' ? 'Confirm Deletion' : 'Confirm Archive'}\n            </DialogTitle>\n            <DialogDescription data-sentry-element=\"DialogDescription\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n              {confirmAction?.type === 'delete' ? 'Are you sure you want to delete this shift table? This action requires password confirmation.' : 'Are you sure you want to archive this shift table? This action requires password confirmation.'}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4 py-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\" data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Enter Password</Label>\n              <Input id=\"password\" type=\"password\" placeholder=\"Enter admin password\" onChange={e => setConfirmAction(prev => prev ? {\n              ...prev,\n              password: e.target.value\n            } : null)} data-sentry-element=\"Input\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n            </div>\n          </div>\n          <DialogFooter data-sentry-element=\"DialogFooter\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            <Button variant=\"outline\" onClick={() => setConfirmDialogOpen(false)} data-sentry-element=\"Button\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n              Cancel\n            </Button>\n            <Button variant={confirmAction?.type === 'delete' ? 'destructive' : 'default'} onClick={handleConfirmAction} data-sentry-element=\"Button\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n              Confirm {confirmAction?.type === 'delete' ? 'Delete' : 'Archive'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>;\n}\nfunction PublishedView({\n  shiftTables,\n  country\n}: {\n  shiftTables: ShiftTable[];\n  country: 'Egypt' | 'Morocco';\n}) {\n  const publishedTables = shiftTables.filter(table => table.publishedTo === country && !table.isArchived).sort((a, b) => {\n    // First sort by date\n    const dateComparison = new Date(a.date).getTime() - new Date(b.date).getTime();\n    if (dateComparison !== 0) return dateComparison;\n\n    // Then sort by shift order\n    return shiftOrder[a.shiftType] - shiftOrder[b.shiftType];\n  });\n  return <div className=\"container mx-auto p-4 space-y-8\" data-sentry-component=\"PublishedView\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n      {publishedTables.map(shiftTable => <Card key={shiftTable.id} className={cn(\"overflow-hidden bg-gradient-to-br\", shiftDetails[shiftTable.shiftType].theme)}>\n          <CardHeader className=\"bg-white bg-opacity-30 backdrop-blur-sm\">\n            <CardTitle>\n              <div className=\"flex items-center gap-2\">\n                <span>{shiftTable.shiftType} Shift</span>\n              </div>\n            </CardTitle>\n            <div className=\"flex flex-wrap gap-4 items-center text-sm\">\n              <div className=\"flex items-center gap-2\">\n                <Calendar className=\"h-4 w-4\" />\n                <span>{shiftTable.date}</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <User className=\"h-4 w-4\" />\n                <span>{shiftTable.senior}</span>\n              </div>\n              <span className=\"text-sm font-medium\">\n                {shiftDetails[shiftTable.shiftType].timeRange}\n              </span>\n            </div>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Agent's Name</TableHead>\n                    {shiftTable.timeSlots.map((slot, index) => <TableHead key={index} className=\"text-center bg-white bg-opacity-30 backdrop-blur-sm\">\n                        {slot}\n                      </TableHead>)}\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {shiftTable.agents.map((agent, agentIndex) => <TableRow key={agentIndex}>\n                      <TableCell>{agent.name}</TableCell>\n                      {agent.tasks.map((task, taskIndex) => <TableCell key={taskIndex} className=\"p-1\">\n                          <div className={cn(\"w-full h-full p-2 rounded\", task ? `bg-gradient-to-r ${taskThemes[task.type]}` : \"bg-white\")}>\n                            {task?.type || '-'}\n                          </div>\n                        </TableCell>)}\n                    </TableRow>)}\n                </TableBody>\n              </Table>\n            </div>\n          </CardContent>\n        </Card>)}\n      {publishedTables.length === 0 && <div className=\"text-center text-gray-500\">No published schedules for {country}</div>}\n    </div>;\n}\nfunction ArchiveView({\n  shiftTables,\n  setShiftTables,\n  updateTablesAndSync\n}: {\n  shiftTables: ShiftTable[];\n  setShiftTables: React.Dispatch<React.SetStateAction<ShiftTable[]>>;\n  updateTablesAndSync: (tables: ShiftTable[]) => Promise<void>;\n}) {\n  const [expandedDate, setExpandedDate] = useState<string | null>(null);\n\n  // Get unique dates from archived tables\n  const archivedDates = [...new Set(shiftTables.filter(table => table.isArchived).map(table => table.date))];\n  const toggleExpand = (date: string) => {\n    setExpandedDate(expandedDate === date ? null : date);\n  };\n  const handleUnarchiveTable = async (tableId: string) => {\n    // First confirm if user wants to unarchive\n    const confirmUnarchive = window.confirm('Are you sure you want to unarchive this shift table?');\n    if (!confirmUnarchive) return;\n\n    // Then prompt for password\n    const password = window.prompt('Please enter the password to unarchive:');\n    if (password !== 'admin@') {\n      toast.error('Incorrect password. Action cancelled.');\n      return;\n    }\n    try {\n      const updatedTables = shiftTables.map(table => table.id === tableId ? {\n        ...table,\n        isArchived: false,\n        manuallyUnarchived: true\n      } : table);\n      await updateTablesAndSync(updatedTables);\n      toast.success('Table unarchived successfully');\n    } catch (error) {\n      console.error('Error unarchiving table:', error);\n      toast.error('Failed to unarchive table');\n    }\n  };\n  const handleDeleteDay = async (date: string) => {\n    // First confirm if user wants to delete\n    const confirmDelete = window.confirm('Are you sure you want to delete all archived tables for this date?');\n    if (!confirmDelete) return;\n\n    // Then prompt for password\n    const password = window.prompt('Please enter the password to delete:');\n    if (password !== 'admin@') {\n      toast.error('Incorrect password. Action cancelled.');\n      return;\n    }\n    try {\n      const updatedShiftTables = shiftTables.filter(table => table.date !== date || !table.isArchived);\n      await saveShiftTables(updatedShiftTables);\n      setShiftTables(updatedShiftTables);\n      toast.success('Archived tables deleted successfully');\n    } catch (error) {\n      console.error('Error deleting archived tables:', error);\n      toast.error('Failed to delete archived tables');\n    }\n  };\n\n  // Group tables by date and country\n  const getTablesForDateAndCountry = (date: string, country: string) => {\n    return shiftTables.filter(table => table.isArchived && table.date === date && (table.publishedTo === country || table.publishedTo === null));\n  };\n  return <div className=\"container mx-auto p-4 space-y-8\" data-sentry-component=\"ArchiveView\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n      <h2 className=\"text-2xl font-bold mb-4\">Archived Schedules</h2>\n      {archivedDates.map(date => <Card key={date} className=\"overflow-hidden\">\n          <CardHeader className=\"cursor-pointer bg-gray-100 hover:bg-gray-200 transition-colors\">\n            <CardTitle className=\"flex justify-between items-center\">\n              <div className=\"flex-1 flex items-center gap-2\" onClick={() => toggleExpand(date)}>\n                <span>{date}</span>\n                {expandedDate === date ? <ChevronUp className=\"h-4 w-4\" /> : <ChevronDown className=\"h-4 w-4\" />}\n              </div>\n              <Button variant=\"ghost\" size=\"icon\" onClick={e => {\n            e.stopPropagation();\n            handleDeleteDay(date);\n          }} className=\"hover:bg-red-100 hover:text-red-600 transition-colors\">\n                <Trash2 className=\"h-4 w-4\" />\n              </Button>\n            </CardTitle>\n          </CardHeader>\n          <AnimatePresence>\n            {expandedDate === date && <motion.div initial={{\n          height: 0,\n          opacity: 0\n        }} animate={{\n          height: \"auto\",\n          opacity: 1\n        }} exit={{\n          height: 0,\n          opacity: 0\n        }} transition={{\n          duration: 0.2\n        }}>\n                <CardContent className=\"pt-4\">\n                  {/* Egypt Section */}\n                  {getTablesForDateAndCountry(date, \"Egypt\").length > 0 && <div className=\"mb-8\">\n                      <div className=\"flex items-center gap-2 mb-4\">\n                        <Flag className=\"h-5 w-5\" />\n                        <h3 className=\"text-lg font-semibold\">Egypt</h3>\n                      </div>\n                      <div className=\"space-y-4\">\n                        {getTablesForDateAndCountry(date, \"Egypt\").sort((a, b) => {\n                  const orderA = shiftOrder[a.shiftType] ?? 0;\n                  const orderB = shiftOrder[b.shiftType] ?? 0;\n                  return orderA - orderB;\n                }).map(shiftTable => <Card key={shiftTable.id} className={cn(\"overflow-hidden bg-gradient-to-br\", shiftDetails[shiftTable.shiftType].theme)}>\n                              <CardHeader className=\"bg-white bg-opacity-30 backdrop-blur-sm\">\n                                <CardTitle>\n                                  <div className=\"flex items-center justify-between gap-2\">\n                                    <span>{shiftTable.shiftType} Shift</span>\n                                    <Button variant=\"ghost\" size=\"sm\" onClick={e => {\n                          e.stopPropagation();\n                          handleUnarchiveTable(shiftTable.id);\n                        }} className=\"hover:bg-green-100 hover:text-green-600 transition-colors\">\n                                      <ArrowUpFromLine className=\"h-4 w-4 mr-1\" />\n                                      Unarchive\n                                    </Button>\n                                  </div>\n                                </CardTitle>\n                                <div className=\"flex flex-wrap gap-4 items-center text-sm\">\n                                  <div className=\"flex items-center gap-2\">\n                                    <User className=\"h-4 w-4\" />\n                                    <span>{shiftTable.senior}</span>\n                                  </div>\n                                  <span className=\"text-sm font-medium\">\n                                    {shiftDetails[shiftTable.shiftType].timeRange}\n                                  </span>\n                                </div>\n                              </CardHeader>\n                              <CardContent className=\"p-0\">\n                                <div className=\"overflow-x-auto\">\n                                  <Table>\n                                    <TableHeader>\n                                      <TableRow>\n                                        <TableHead className=\"w-[150px] bg-white bg-opacity-30 backdrop-blur-sm sticky left-0 z-20\">Agent's Name</TableHead>\n                                        {shiftTable.timeSlots.map((slot, index) => <TableHead key={index} className=\"text-center bg-white bg-opacity-30 backdrop-blur-sm\">\n                                            {slot}\n                                          </TableHead>)}\n                                      </TableRow>\n                                    </TableHeader>\n                                    <TableBody>\n                                      {shiftTable.agents.map((agent, agentIndex) => {\n                            const isAgentSick = agent.tasks.some(task => task?.type === 'Sick');\n                            return <TableRow key={agentIndex} className={cn(isAgentSick && \"bg-gray-100\")}>\n                                            <TableCell className={cn(\"bg-white bg-opacity-30 backdrop-blur-sm sticky left-0 z-10\", agent.highlight && \"bg-orange-200 bg-opacity-60\")}>\n                                              <span>{agent.name}</span>\n                                            </TableCell>\n                                            {agent.tasks.map((task, taskIndex) => <TableCell key={taskIndex} className=\"p-1\">\n                                                <div className={cn(\"w-full h-full p-2 rounded\", task ? `bg-gradient-to-r ${taskThemes[task.type]}` : \"bg-white\")}>\n                                                  {task?.type || '-'}\n                                                </div>\n                                              </TableCell>)}\n                                          </TableRow>;\n                          })}\n                                    </TableBody>\n                                  </Table>\n                                </div>\n                              </CardContent>\n                            </Card>)}\n                      </div>\n                    </div>}\n\n                  {/* Morocco Section */}\n                  {getTablesForDateAndCountry(date, \"Morocco\").length > 0 && <div>\n                      <div className=\"flex items-center gap-2 mb-4\">\n                        <Flag className=\"h-5 w-5\" />\n                        <h3 className=\"text-lg font-semibold\">Morocco</h3>\n                      </div>\n                      <div className=\"space-y-4\">\n                        {getTablesForDateAndCountry(date, \"Morocco\").sort((a, b) => {\n                  const orderA = shiftOrder[a.shiftType] ?? 0;\n                  const orderB = shiftOrder[b.shiftType] ?? 0;\n                  return orderA - orderB;\n                }).map(shiftTable => <Card key={shiftTable.id} className={cn(\"overflow-hidden bg-gradient-to-br\", shiftDetails[shiftTable.shiftType].theme)}>\n                              <CardHeader className=\"bg-white bg-opacity-30 backdrop-blur-sm\">\n                                <CardTitle>\n                                  <div className=\"flex items-center justify-between gap-2\">\n                                    <span>{shiftTable.shiftType} Shift</span>\n                                    <Button variant=\"ghost\" size=\"sm\" onClick={e => {\n                          e.stopPropagation();\n                          handleUnarchiveTable(shiftTable.id);\n                        }} className=\"hover:bg-green-100 hover:text-green-600 transition-colors\">\n                                      <ArrowUpFromLine className=\"h-4 w-4 mr-1\" />\n                                      Unarchive\n                                    </Button>\n                                  </div>\n                                </CardTitle>\n                                <div className=\"flex flex-wrap gap-4 items-center text-sm\">\n                                  <div className=\"flex items-center gap-2\">\n                                    <User className=\"h-4 w-4\" />\n                                    <span>{shiftTable.senior}</span>\n                                  </div>\n                                  <span className=\"text-sm font-medium\">\n                                    {shiftDetails[shiftTable.shiftType].timeRange}\n                                  </span>\n                                </div>\n                              </CardHeader>\n                              <CardContent className=\"p-0\">\n                                <div className=\"overflow-x-auto\">\n                                  <Table>\n                                    <TableHeader>\n                                      <TableRow>\n                                        <TableHead className=\"w-[150px] bg-white bg-opacity-30 backdrop-blur-sm sticky left-0 z-20\">Agent's Name</TableHead>\n                                        {shiftTable.timeSlots.map((slot, index) => <TableHead key={index} className=\"text-center bg-white bg-opacity-30 backdrop-blur-sm\">\n                                            {slot}\n                                          </TableHead>)}\n                                      </TableRow>\n                                    </TableHeader>\n                                    <TableBody>\n                                      {shiftTable.agents.map((agent, agentIndex) => {\n                            const isAgentSick = agent.tasks.some(task => task?.type === 'Sick');\n                            return <TableRow key={agentIndex} className={cn(isAgentSick && \"bg-gray-100\")}>\n                                            <TableCell className={cn(\"bg-white bg-opacity-30 backdrop-blur-sm sticky left-0 z-10\", agent.highlight && \"bg-orange-200 bg-opacity-60\")}>\n                                              <span>{agent.name}</span>\n                                            </TableCell>\n                                            {agent.tasks.map((task, taskIndex) => <TableCell key={taskIndex} className=\"p-1\">\n                                                <div className={cn(\"w-full h-full p-2 rounded\", task ? `bg-gradient-to-r ${taskThemes[task.type]}` : \"bg-white\")}>\n                                                  {task?.type || '-'}\n                                                </div>\n                                              </TableCell>)}\n                                          </TableRow>;\n                          })}\n                                    </TableBody>\n                                  </Table>\n                                </div>\n                              </CardContent>\n                            </Card>)}\n                      </div>\n                    </div>}\n                </CardContent>\n              </motion.div>}\n          </AnimatePresence>\n        </Card>)}\n    </div>;\n}\nfunction AnalyticsView({\n  shiftTables,\n  analyticsFilters,\n  setAnalyticsFilters\n}: {\n  shiftTables: ShiftTable[];\n  analyticsFilters: {\n    startDate: string | null;\n    endDate: string | null;\n    country: 'Egypt' | 'Morocco';\n    view: string;\n  };\n  setAnalyticsFilters: (filters: any) => void;\n}) {\n  const handleFilterChange = (key: string, value: any) => {\n    setAnalyticsFilters({\n      ...analyticsFilters,\n      [key]: value\n    });\n  };\n  const timeToMinutes = (timeStr: string) => {\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n  const calculateDuration = (startTime: string, endTime: string) => {\n    const start = timeToMinutes(startTime);\n    let end = timeToMinutes(endTime);\n\n    // If end time is less than start time, it means we've crossed midnight\n    if (end < start) {\n      end += 24 * 60; // Add 24 hours\n    }\n    return (end - start) / 60; // Convert minutes to hours\n  };\n  const calculateTaskHours = (table: ShiftTable, agent: Agent, taskType: TaskType) => {\n    if (!agent.tasks || !table.timeSlots) return 0;\n    let totalHours = 0;\n    agent.tasks.forEach((task, index) => {\n      if (task?.type === taskType && table.timeSlots[index]) {\n        const timeRange = table.timeSlots[index];\n        const [startTime, endTime] = timeRange.split('-').map(t => t.trim());\n        if (startTime && endTime) {\n          const hours = calculateDuration(startTime, endTime);\n          console.log(`${agent.name} - ${taskType} for slot ${timeRange}: ${hours} hours`);\n          if (hours > 0) {\n            totalHours += hours;\n          }\n        }\n      }\n    });\n    console.log(`Total hours for ${agent.name} - ${taskType}: ${totalHours}`);\n    return Number(totalHours.toFixed(2));\n  };\n  const calculateAnalytics = (tables: ShiftTable[], country: 'Egypt' | 'Morocco') => {\n    console.log(`Starting analytics calculation for ${country}`);\n    const filteredTables = tables.filter(table => {\n      // Base condition for valid table\n      const isValidTable = table.country === country && table.publishedTo === country;\n\n      // If no date filters, just use base condition\n      if (!analyticsFilters.startDate || !analyticsFilters.endDate) {\n        return isValidTable;\n      }\n\n      // If we have date filters, check the date range\n      const tableDate = new Date(table.date);\n      const start = new Date(analyticsFilters.startDate);\n      const end = new Date(analyticsFilters.endDate);\n      return isValidTable && tableDate >= start && tableDate <= end;\n    });\n    console.log(`Found ${filteredTables.length} valid tables for ${country}`, {\n      tables: filteredTables.map(t => ({\n        date: t.date,\n        agentCount: t.agents?.length || 0\n      }))\n    });\n    const analytics: Record<string, {\n      name: string;\n      tasks: Record<TaskType, number>;\n      breakHours: number;\n    }> = {};\n    filteredTables.forEach(table => {\n      if (!table.agents) return;\n      console.log(`Processing table: ${table.date}, Shift: ${table.shiftType}`);\n      table.agents.forEach(agent => {\n        if (!agent.name || !agent.tasks) return;\n\n        // Initialize agent analytics if not exists\n        if (!analytics[agent.name]) {\n          analytics[agent.name] = {\n            name: agent.name,\n            tasks: taskTypesByCountry[country].reduce((acc, type) => {\n              acc[type] = 0;\n              return acc;\n            }, {} as Record<TaskType, number>),\n            breakHours: 0\n          };\n        }\n\n        // Process each task\n        agent.tasks.forEach((task, index) => {\n          if (!task || !task.type || !table.timeSlots || !table.timeSlots[index]) return;\n          const timeRange = table.timeSlots[index];\n          const [startTime, endTime] = timeRange.split('-').map(t => t.trim());\n          if (startTime && endTime) {\n            const hours = calculateDuration(startTime, endTime);\n            if (hours > 0) {\n              console.log(`Adding ${hours} hours for ${agent.name} - ${task.type} (${timeRange})`);\n              analytics[agent.name].tasks[task.type] += hours;\n              if (task.type === 'Break' || task.type === 'Sick') {\n                analytics[agent.name].breakHours += hours;\n              }\n            }\n          }\n        });\n      });\n    });\n    console.log('Final analytics:', analytics);\n    return analytics;\n  };\n  const uniqueTaskTypes = Array.from(new Set(taskTypesByCountry[analyticsFilters.country]));\n  return <div className=\"container mx-auto p-4 space-y-8\" data-sentry-component=\"AnalyticsView\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n      <Card data-sentry-element=\"Card\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <CardHeader data-sentry-element=\"CardHeader\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <CardTitle data-sentry-element=\"CardTitle\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Analytics</CardTitle>\n          <CardDescription data-sentry-element=\"CardDescription\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">View work hours by agent and task type</CardDescription>\n        </CardHeader>\n        <CardContent data-sentry-element=\"CardContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <div className=\"space-y-4\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <div>\n                <Label data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Country</Label>\n                <Select value={analyticsFilters.country} onValueChange={(value: 'Egypt' | 'Morocco') => handleFilterChange('country', value)} data-sentry-element=\"Select\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                  <SelectTrigger data-sentry-element=\"SelectTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                    <SelectValue data-sentry-element=\"SelectValue\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n                  </SelectTrigger>\n                  <SelectContent data-sentry-element=\"SelectContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                    <SelectItem value=\"Egypt\" data-sentry-element=\"SelectItem\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Egypt</SelectItem>\n                    <SelectItem value=\"Morocco\" data-sentry-element=\"SelectItem\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Morocco</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div>\n                <Label data-sentry-element=\"Label\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Filter Type</Label>\n                <Select value={analyticsFilters.view} onValueChange={(value: 'all-time' | 'date-range') => handleFilterChange('view', value)} data-sentry-element=\"Select\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                  <SelectTrigger data-sentry-element=\"SelectTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                    <SelectValue data-sentry-element=\"SelectValue\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n                  </SelectTrigger>\n                  <SelectContent data-sentry-element=\"SelectContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                    <SelectItem value=\"all-time\" data-sentry-element=\"SelectItem\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">All Time</SelectItem>\n                    <SelectItem value=\"date-range\" data-sentry-element=\"SelectItem\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Date Range</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            {analyticsFilters.view === 'date-range' && <div className=\"flex flex-col sm:flex-row gap-4\">\n                <div>\n                  <Label>Start Date</Label>\n                  <Input type=\"date\" value={analyticsFilters.startDate || ''} onChange={e => handleFilterChange('startDate', e.target.value)} />\n                </div>\n                <div>\n                  <Label>End Date</Label>\n                  <Input type=\"date\" value={analyticsFilters.endDate || ''} onChange={e => handleFilterChange('endDate', e.target.value)} />\n                </div>\n              </div>}\n          </div>\n\n          <div className=\"mt-6 overflow-x-auto\">\n            <Table data-sentry-element=\"Table\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n              <TableHeader data-sentry-element=\"TableHeader\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                <TableRow data-sentry-element=\"TableRow\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                  <TableHead className=\"bg-white sticky left-0\" data-sentry-element=\"TableHead\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Agent Name</TableHead>\n                  {uniqueTaskTypes.map(type => <TableHead key={type} className=\"text-center\">\n                      {type}\n                    </TableHead>)}\n                  <TableHead className=\"text-center\" data-sentry-element=\"TableHead\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Total Hours</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody data-sentry-element=\"TableBody\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n                {Object.values(calculateAnalytics(shiftTables, analyticsFilters.country)).map(agent => {\n                const totalHours = uniqueTaskTypes.reduce((sum, type) => sum + agent.tasks[type], 0);\n                return <TableRow key={agent.name}>\n                      <TableCell className=\"bg-white sticky left-0 font-medium\">\n                        {agent.name}\n                      </TableCell>\n                      {uniqueTaskTypes.map(type => <TableCell key={type} className=\"text-center\">\n                          {Number(agent.tasks[type]).toFixed(1)}\n                        </TableCell>)}\n                      <TableCell className=\"text-center\">\n                        {Number(totalHours).toFixed(1)}\n                      </TableCell>\n                    </TableRow>;\n              })}\n              </TableBody>\n            </Table>\n          </div>\n        </CardContent>\n      </Card>\n    </div>;\n}\nfunction getGreeting() {\n  const hour = new Date().getHours();\n  if (hour >= 5 && hour < 12) return \"Good Morning\";\n  if (hour >= 12 && hour < 17) return \"Good Afternoon\";\n  if (hour >= 17 && hour < 22) return \"Good Evening\";\n  return \"Good Night\";\n}\nconst motivationalMessages = [\"Transform your ideas into perfect schedules!\", \"Ready to make today amazing?\", \"Let's organize your day efficiently!\", \"Create schedules that work for everyone!\", \"Make scheduling simple and effective!\"];\nfunction getRandomMessage() {\n  const messages = ['Transform your ideas into perfect schedules!', 'Ready to make today amazing?', 'Let\\'s organize your day efficiently!', 'Create schedules that work for everyone!', 'Make scheduling simple and effective!'];\n\n  // Get current hour to use as seed\n  const currentHour = new Date().getHours();\n  // Use hour as index to ensure same message during the hour\n  return messages[currentHour % messages.length];\n}\n;\nexport default function ModernScheduleMaker() {\n  const [shiftTables, setShiftTables] = useState<ShiftTable[]>([]);\n  const [publishedTables, setPublishedTables] = useState<ShiftTable[]>([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [activeTab, setActiveTab] = useState<'admin' | 'egypt' | 'morocco' | 'archive' | 'analytics'>('admin');\n\n  // Load saved tab from localStorage\n  useEffect(() => {\n    const savedTab = localStorage.getItem('activeTab');\n    if (savedTab) {\n      setActiveTab(savedTab as 'admin' | 'egypt' | 'morocco' | 'archive' | 'analytics');\n    }\n  }, []);\n\n  // Save tab to localStorage when it changes\n  useEffect(() => {\n    localStorage.setItem('activeTab', activeTab);\n  }, [activeTab]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [motivationalMessage, setMotivationalMessage] = useState('Welcome to Schedule Maker');\n  const [activeCountries, setActiveCountries] = useClientActiveCountries();\n  const [pendingChanges, setPendingChanges] = useState(0);\n  const [lastNotificationTime, setLastNotificationTime] = useState(0);\n  const NOTIFICATION_COOLDOWN = 5000; // 5 seconds cooldown between notifications\n\n  const showNotification = useCallback((message: string, type: 'success' | 'error' = 'success') => {\n    const now = Date.now();\n    if (now - lastNotificationTime > NOTIFICATION_COOLDOWN) {\n      if (type === 'success') {\n        toast.success(message);\n      } else {\n        toast.error(message);\n      }\n      setLastNotificationTime(now);\n    }\n  }, [lastNotificationTime]);\n  const [syncStatus, setSyncStatus] = useState<'synced' | 'syncing' | 'error'>('synced');\n  const [lastSyncTime, setLastSyncTime] = useState<Date | null>(null);\n  const updateTablesAndSync = async (newTables: ShiftTable[], showToast: boolean = false) => {\n    try {\n      setSyncStatus('syncing');\n\n      // Update local states immediately\n      setShiftTables(newTables);\n      const newPublished = newTables.filter(table => !table.isArchived && !table.isDeleted && (table.publishedTo === 'Egypt' || table.publishedTo === 'Morocco'));\n      setPublishedTables(newPublished);\n\n      // Save to Firebase\n      await saveShiftTables(newTables);\n      setSyncStatus('synced');\n      setLastSyncTime(new Date());\n      if (showToast) {\n        toast.success('Changes saved successfully');\n      }\n    } catch (error) {\n      console.error('Error updating tables:', error);\n      setSyncStatus('error');\n      toast.error('Failed to save changes');\n      throw error;\n    }\n  };\n  const getStatusColor = () => {\n    switch (syncStatus) {\n      case 'synced':\n        return 'text-green-500';\n      case 'syncing':\n        return 'text-yellow-500';\n      case 'error':\n        return 'text-red-500';\n      default:\n        return 'text-gray-500';\n    }\n  };\n  const getStatusIcon = () => {\n    switch (syncStatus) {\n      case 'synced':\n        return <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n          </svg>;\n      case 'syncing':\n        return <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n          </svg>;\n      case 'error':\n        return <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>;\n    }\n  };\n  const getStatusText = () => {\n    switch (syncStatus) {\n      case 'synced':\n        return `Synced${lastSyncTime ? ` at ${lastSyncTime.toLocaleTimeString()}` : ''}`;\n      case 'syncing':\n        return 'Syncing...';\n      case 'error':\n        return 'Sync failed';\n      default:\n        return 'Unknown status';\n    }\n  };\n  const SyncStatusIndicator = () => {\n    return <div className=\"flex items-center space-x-2 text-sm\" data-sentry-component=\"SyncStatusIndicator\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n        <span className={`flex items-center ${getStatusColor()}`}>\n          {getStatusIcon()}\n        </span>\n        <span className={`${getStatusColor()} hidden sm:inline`}>{getStatusText()}</span>\n      </div>;\n  };\n\n  // Function to load all tables from Firestore\n  const loadAllTables = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const tables = await loadShiftTables();\n      const migratedTables = migrateMoroccoTasks(tables);\n      setShiftTables(migratedTables);\n      const published = migratedTables.filter(table => !table.isArchived && !table.isDeleted && (table.publishedTo === 'Egypt' || table.publishedTo === 'Morocco'));\n      setPublishedTables(published);\n    } catch (error) {\n      console.error('Error loading tables:', error);\n      toast.error('Failed to load tables');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [setShiftTables, setPublishedTables, toast]);\n\n  // Add migration function for Morocco tasks\n  const migrateMoroccoTasks = (tables: ShiftTable[]): ShiftTable[] => {\n    return tables.map(table => {\n      if (table.country !== 'Morocco') return table;\n      const migratedAgents: Agent[] = table.agents.map(agent => ({\n        ...agent,\n        tasks: agent.tasks.map(task => {\n          if (!task) return null;\n\n          // Type assertion to ensure we're working with a TaskType\n          const taskType = task.type as TaskType;\n          return {\n            ...task,\n            type: taskType\n          };\n        })\n      }));\n      return {\n        ...table,\n        agents: migratedAgents\n      };\n    });\n  };\n\n  // Initialize active tab from localStorage after mount\n  useEffect(() => {\n    // Load tables regardless of login status for public views\n    loadAllTables();\n  }, [loadAllTables]);\n\n  // Function to update both states instantly and sync with Firestore\n  const handlePublishTable = async (id: string) => {\n    try {\n      const table = shiftTables.find(t => t.id === id);\n      if (!table) return;\n      const updatedTables = shiftTables.map(table => table.id === id ? {\n        ...table,\n        publishedTo: table.publishedTo ? null : table.country\n      } : table);\n      await updateTablesAndSync(updatedTables);\n    } catch (error) {\n      console.error('Error publishing table:', error);\n      toast.error('Failed to publish table');\n    }\n  };\n  const handleArchiveTable = async (id: string) => {\n    if (!id) {\n      console.error('Invalid table ID provided to handleArchiveTable');\n      return;\n    }\n    try {\n      // First confirm if user wants to archive\n      const confirmArchive = window.confirm('Are you sure you want to archive this shift table?');\n      if (!confirmArchive) return;\n\n      // Then prompt for password\n      const password = window.prompt('Please enter the password to archive:');\n      if (password !== 'admin@') {\n        toast.error('Incorrect password. Action cancelled.');\n        return;\n      }\n      const updatedTables: ShiftTable[] = shiftTables.map(table => ({\n        ...table,\n        publishedTo: table.id === id ? table.country : table.publishedTo\n      }));\n      await updateTablesAndSync(updatedTables);\n      const targetTable = shiftTables.find(t => t.id === id);\n      if (targetTable) {\n        toast.success(`Table published to ${targetTable.country}`);\n      }\n    } catch (error) {\n      console.error('Error archiving table:', error);\n      toast.error('Failed to archive table');\n    }\n  };\n  const updateAgentTask = async (tableId: string, agentIndex: number, taskIndex: number, taskType: TaskType) => {\n    try {\n      const updatedTables = shiftTables.map(table => {\n        if (table.id === tableId) {\n          const updatedAgents = [...table.agents];\n          if (!updatedAgents[agentIndex].tasks) {\n            updatedAgents[agentIndex].tasks = [];\n          }\n          updatedAgents[agentIndex].tasks[taskIndex] = {\n            type: taskType\n          };\n          return {\n            ...table,\n            agents: updatedAgents\n          };\n        }\n        return table;\n      });\n      await updateTablesAndSync(updatedTables);\n    } catch (error) {\n      console.error('Error updating agent task:', error);\n      toast.error('Failed to update task');\n    }\n  };\n  const updateAgentName = async (tableId: string, agentIndex: number, name: string) => {\n    try {\n      const updatedTables = shiftTables.map(table => {\n        if (table.id === tableId) {\n          const updatedAgents = [...table.agents];\n          if (!updatedAgents[agentIndex]) {\n            updatedAgents[agentIndex] = {\n              name,\n              tasks: []\n            };\n          } else {\n            updatedAgents[agentIndex] = {\n              ...updatedAgents[agentIndex],\n              name\n            };\n          }\n          return {\n            ...table,\n            agents: updatedAgents\n          };\n        }\n        return table;\n      });\n      await updateTablesAndSync(updatedTables);\n    } catch (error) {\n      console.error('Error updating agent name:', error);\n      toast.error('Failed to update agent');\n    }\n  };\n  const removeShiftTable = async (id: string) => {\n    if (!id) return;\n    try {\n      // Find the table to be deleted\n      const tableToDelete = shiftTables.find(table => table.id === id);\n      if (!tableToDelete) {\n        toast.error('Table not found');\n        return;\n      }\n\n      // First backup the table\n      await saveDeletedTable(tableToDelete);\n\n      // Then mark as deleted\n      const updatedTables = shiftTables.map(table => table.id === id ? {\n        ...table,\n        isDeleted: true\n      } : table);\n      await updateTablesAndSync(updatedTables);\n      toast.success('Table deleted successfully');\n    } catch (error) {\n      console.error('Error deleting table:', error);\n      toast.error('Failed to delete table');\n    }\n  };\n\n  // Get published tables for a specific country\n  const getPublishedTables = (country: 'Egypt' | 'Morocco') => {\n    return publishedTables.filter(table => table.publishedTo === country);\n  };\n\n  // Handle tab changes and persist to localStorage\n  const handleTabChange = (value: string) => {\n    const newTab = value as 'admin' | 'egypt' | 'morocco' | 'archive' | 'analytics';\n    setActiveTab(newTab);\n    localStorage.setItem('activeTab', newTab);\n    // Reload tables when switching tabs\n    loadAllTables();\n  };\n\n  // Save active countries whenever they change\n  useEffect(() => {\n    localStorage.setItem('activeCountries', JSON.stringify(activeCountries));\n  }, [activeCountries, setActiveCountries]);\n\n  // Check session status on component mount\n  useEffect(() => {\n    const checkSession = () => {\n      const sessionExpiry = localStorage.getItem('sessionExpiry');\n      if (sessionExpiry) {\n        const expiryTime = parseInt(sessionExpiry);\n        if (Date.now() < expiryTime) {\n          setIsLoggedIn(true);\n          const newExpiryTime = Date.now() + 86400000;\n          localStorage.setItem('sessionExpiry', newExpiryTime.toString());\n        } else {\n          setIsLoggedIn(false);\n          localStorage.removeItem('sessionExpiry');\n        }\n      }\n    };\n    checkSession();\n    const interval = setInterval(checkSession, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleLogin = () => {\n    const expiryTime = Date.now() + 86400000;\n    localStorage.setItem('sessionExpiry', expiryTime.toString());\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('sessionExpiry');\n    setIsLoggedIn(false);\n  };\n  const [analyticsFilters, setAnalyticsFilters] = useClientAnalyticsFilters();\n  useEffect(() => {\n    localStorage.setItem('analyticsFilters', JSON.stringify(analyticsFilters));\n  }, [analyticsFilters]);\n  useEffect(() => {\n    localStorage.setItem('activeTab', activeTab);\n  }, [activeTab]);\n  useEffect(() => {\n    localStorage.setItem('activeCountries', JSON.stringify(activeCountries));\n  }, [activeCountries]);\n  useEffect(() => {\n    localStorage.setItem('analyticsFilters', JSON.stringify(analyticsFilters));\n  }, [analyticsFilters]);\n  return <div className=\"relative min-h-screen\" data-sentry-component=\"ModernScheduleMaker\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n      {/* Loading overlay */}\n      {isLoading && <div className=\"fixed inset-0 bg-white/50 backdrop-blur-sm z-50 flex items-center justify-center\">\n          <div className=\"flex flex-col items-center gap-4\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n            <p className=\"text-lg font-medium text-primary animate-pulse\">Loading your schedules...</p>\n          </div>\n        </div>}\n\n      {/* Saving indicator */}\n      {isSaving && <div className=\"fixed top-4 right-4 bg-primary/10 backdrop-blur-sm rounded-lg px-4 py-2 flex items-center gap-2 z-50\">\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\n          <span className=\"text-sm font-medium text-primary\">Saving changes...</span>\n        </div>}\n\n      {isLoggedIn && <Button variant=\"ghost\" size=\"sm\" onClick={handleLogout} className=\"absolute top-4 right-4 flex items-center gap-2 hover:bg-red-100 hover:text-red-600 transition-colors\">\n          <LogOut className=\"h-4 w-4\" />\n          Logout\n        </Button>}\n      <div className=\"container mx-auto p-4\">\n        <div className=\"mb-6 text-center\">\n          <h1 className=\"text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent animate-gradient\">\n            {getGreeting()} 👋\n          </h1>\n          <p className=\"mt-2 text-lg text-gray-600 animate-fade-in\">\n            {motivationalMessage}\n          </p>\n        </div>\n        <div className=\"flex justify-between items-center mb-4\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Schedule Maker</h1>\n          <SyncStatusIndicator data-sentry-element=\"SyncStatusIndicator\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n        </div>\n        <Tabs value={activeTab} className=\"space-y-4\" onValueChange={handleTabChange} data-sentry-element=\"Tabs\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n          <TabsList className=\"grid w-full grid-cols-5\" data-sentry-element=\"TabsList\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            <TabsTrigger value=\"admin\" data-sentry-element=\"TabsTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n              {isLoggedIn ? 'Admin' : <LogOut className=\"h-4 w-4\" />}\n            </TabsTrigger>\n            <TabsTrigger value=\"analytics\" disabled={!isLoggedIn} data-sentry-element=\"TabsTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n              {isLoggedIn ? 'Analytics' : <LogOut className=\"h-4 w-4\" />}\n            </TabsTrigger>\n            <TabsTrigger value=\"archive\" disabled={!isLoggedIn} data-sentry-element=\"TabsTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n              {isLoggedIn ? 'Archive' : <LogOut className=\"h-4 w-4\" />}\n            </TabsTrigger>\n            <TabsTrigger value=\"egypt\" data-sentry-element=\"TabsTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Egypt</TabsTrigger>\n            <TabsTrigger value=\"morocco\" data-sentry-element=\"TabsTrigger\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">Morocco</TabsTrigger>\n          </TabsList>\n          <TabsContent value=\"admin\" data-sentry-element=\"TabsContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            {isLoggedIn ? <AdminView shiftTables={shiftTables} setShiftTables={setShiftTables} publishedTables={publishedTables} setPublishedTables={setPublishedTables} updateTablesAndSync={updateTablesAndSync} activeCountries={activeCountries} setActiveCountries={setActiveCountries} /> : <LoginForm onLogin={handleLogin} />}\n          </TabsContent>\n          <TabsContent value=\"analytics\" data-sentry-element=\"TabsContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            {isLoggedIn && <AnalyticsView shiftTables={shiftTables} analyticsFilters={analyticsFilters} setAnalyticsFilters={setAnalyticsFilters} />}\n          </TabsContent>\n          <TabsContent value=\"archive\" data-sentry-element=\"TabsContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            {isLoggedIn && <ArchiveView shiftTables={shiftTables} setShiftTables={setShiftTables} updateTablesAndSync={updateTablesAndSync} />}\n          </TabsContent>\n          <TabsContent value=\"egypt\" data-sentry-element=\"TabsContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            <PublishedView shiftTables={getPublishedTables('Egypt')} country=\"Egypt\" data-sentry-element=\"PublishedView\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n          </TabsContent>\n          <TabsContent value=\"morocco\" data-sentry-element=\"TabsContent\" data-sentry-source-file=\"ModernScheduleMaker.tsx\">\n            <PublishedView shiftTables={getPublishedTables('Morocco')} country=\"Morocco\" data-sentry-element=\"PublishedView\" data-sentry-source-file=\"ModernScheduleMaker.tsx\" />\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>;\n}"],"names":["cn","inputs","twMerge","clsx","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","React","ref","className","asChild","props","Comp","Slot","displayName","Card","div","CardHeader","CardTitle","CardDescription","CardContent","Tabs","TabsPrimitive","TabsList","TabsTrigger","TabsContent","Input","type","input","labelVariants","Label","LabelPrimitive","Select","SelectPrimitive","SelectValue","SelectTrigger","children","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","SelectContent","position","SelectLabel","SelectItem","span","Check","Switch","SwitchPrimitives","Table","table","TableHeader","thead","TableBody","tbody","tfoot","TableRow","tr","TableHead","th","TableCell","td","TableCaption","caption","Dialog","DialogPrimitive","DialogTrigger","DialogPortal","DialogOverlay","DialogContent","X","DialogHeader","data-sentry-component","data-sentry-source-file","DialogFooter","DialogTitle","DialogDescription","badgeVariants","Badge","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","initializeFirestore","cacheSizeBytes","CACHE_SIZE_UNLIMITED","enableIndexedDbPersistence","catch","err","code","console","log","COLLECTION_NAME","DOCUMENT_ID","AGENTS_COLLECTION","AGENTS_DOCUMENT","saveToFirestore","data","collectionName","documentId","docRef","doc","runTransaction","transaction","docSnap","get","exists","currentData","currentTables","Map","tables","map","id","newTables","forEach","set","Array","from","values","lastModified","serverTimestamp","lastRead","mergedData","mergeData","newData","error","loadFromFirestore","getDoc","cleanData","saveAgents","agents","loadAgents","Egypt","Morocco","saveShiftTables","loadShiftTables","filter","isDeleted","shiftDetails","timeRange","timeSlots","theme","shiftOrder","taskTypesByCountry","taskThemes","initialAgents","LoginForm","onLogin","username","setUsername","useState","password","setPassword","setError","isLoading","setIsLoading","handleSubmit","e","preventDefault","data-sentry-element","form","onSubmit","htmlFor","value","onChange","target","disabled","required","p","LogOut","AdminView","shiftTables","setShiftTables","publishedTables","setPublishedTables","updateTablesAndSync","activeCountries","setActiveCountries","newShiftType","setNewShiftType","splitInterval","setSplitInterval","splitIntervalInput","setSplitIntervalInput","previewTimeSlots","setPreviewTimeSlots","splitWarning","setSplitWarning","setAgents","newAgentName","setNewAgentName","newAgentCountry","setNewAgentCountry","selectedDate","setSelectedDate","Date","toISOString","split","newSeniorName","setNewSeniorName","confirmDialogOpen","setConfirmDialogOpen","confirmAction","setConfirmAction","handleSplitIntervalChange","useCallback","parseFloat","isNaN","generateTimeSlots","length","interval","shiftType","start","end","currentTime","endTime","Math","min","startHour","floor","startMinutes","round","endHour","endMinutes","startStr","toString","padStart","endStr","push","handleShiftTypeChange","useEffect","loadSavedAgents","savedAgents","Object","keys","toast","saveAgentsToFirebase","addAgent","updatedTables","tableId","newAgent","name","tasks","fill","deleteAgent","agentIndex","updatedAgents","splice","success","updateAgentName","agentName","getAvailableAgents","country","includes","newAgents","updateAgentTask","taskIndex","taskType","publishTable","tableToPublish","find","publishedTo","unpublishTable","addNewAgent","trim","tablesByDate","isArchived","reduce","acc","date","handleCountryChange","newActiveCountries","localStorage","setItem","JSON","stringify","tableCountry","savedCountries","getItem","parse","loadTempChanges","tempTablesStr","tempTables","isArray","addNewShiftTable","selectedCountry","newTable","crypto","randomUUID","senior","manuallyUnarchived","shifts","Morning","Day","Afternoon","Evening","Night","handleConfirmAction","openConfirmDialog","checked","onCheckedChange","placeholder","onValueChange","onClick","entries","Calendar","toLocaleDateString","weekday","year","month","day","shiftTable","Globe","aria-label","Trash2","Archive","User","slot","index","agent","isAgentSick","some","task","highlight","_","Plus","step","max","Clock","svg","xmlns","viewBox","path","fillRule","d","clipRule","open","onOpenChange","prev","PublishedView","sort","a","b","dateComparison","getTime","ArchiveView","expandedDate","setExpandedDate","archivedDates","Set","toggleExpand","handleUnarchiveTable","window","confirmUnarchive","confirm","prompt","handleDeleteDay","confirmDelete","updatedShiftTables","getTablesForDateAndCountry","h2","stopPropagation","AnimatePresence","motion","initial","height","opacity","animate","exit","transition","duration","Flag","h3","orderA","ArrowUpFromLine","AnalyticsView","analyticsFilters","setAnalyticsFilters","handleFilterChange","key","timeToMinutes","hours","minutes","timeStr","Number","calculateDuration","startTime","uniqueTaskTypes","view","startDate","endDate","calculateAnalytics","filteredTables","isValidTable","tableDate","t","agentCount","analytics","breakHours","totalHours","sum","toFixed","ModernScheduleMaker","isLoggedIn","setIsLoggedIn","activeTab","setActiveTab","savedTab","isSaving","setIsSaving","motivationalMessage","setMotivationalMessage","useClientActiveCountries","defaultCountries","pendingChanges","setPendingChanges","lastNotificationTime","setLastNotificationTime","message","now","NOTIFICATION_COOLDOWN","syncStatus","setSyncStatus","lastSyncTime","setLastSyncTime","showToast","newPublished","getStatusColor","getStatusIcon","stroke","strokeLinecap","strokeLinejoin","strokeWidth","getStatusText","toLocaleTimeString","loadAllTables","migratedTables","migrateMoroccoTasks","published","migratedAgents","getPublishedTables","checkSession","sessionExpiry","expiryTime","parseInt","newExpiryTime","removeItem","setInterval","clearInterval","useClientAnalyticsFilters","filters","setFilters","defaultFilters","savedFilters","handleLogout","h1","getGreeting","hour","getHours","SyncStatusIndicator","handleTabChange","newTab","handleLogin"],"sourceRoot":""}